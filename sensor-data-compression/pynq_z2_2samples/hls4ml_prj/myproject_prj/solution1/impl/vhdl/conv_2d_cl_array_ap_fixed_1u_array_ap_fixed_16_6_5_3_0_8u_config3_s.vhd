-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config3_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_V_dout : IN STD_LOGIC_VECTOR (10 downto 0);
    data_V_data_V_empty_n : IN STD_LOGIC;
    data_V_data_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config3_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv17_17 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010111";
    constant ap_const_lv17_1FFE6 : STD_LOGIC_VECTOR (16 downto 0) := "11111111111100110";
    constant ap_const_lv17_1FFE3 : STD_LOGIC_VECTOR (16 downto 0) := "11111111111100011";
    constant ap_const_lv17_15 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010101";
    constant ap_const_lv17_1FFE5 : STD_LOGIC_VECTOR (16 downto 0) := "11111111111100101";
    constant ap_const_lv7_51 : STD_LOGIC_VECTOR (6 downto 0) := "1010001";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv12_F00 : STD_LOGIC_VECTOR (11 downto 0) := "111100000000";
    constant ap_const_lv12_F40 : STD_LOGIC_VECTOR (11 downto 0) := "111101000000";
    constant ap_const_lv12_F80 : STD_LOGIC_VECTOR (11 downto 0) := "111110000000";
    constant ap_const_lv11_C0 : STD_LOGIC_VECTOR (10 downto 0) := "00011000000";
    constant ap_const_lv12_FC0 : STD_LOGIC_VECTOR (11 downto 0) := "111111000000";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal pX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sX : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal pY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal sY : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal kernel_data_V_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal kernel_data_V_4 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal kernel_data_V_7 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal kernel_data_V_2 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal kernel_data_V_5 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal kernel_data_V_8 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    signal line_buffer_Array_V_0_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_0_0_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_Array_V_1_0_ce0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_we0 : STD_LOGIC;
    signal line_buffer_Array_V_1_0_q0 : STD_LOGIC_VECTOR (10 downto 0);
    signal data_V_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln79_reg_4699 : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal and_ln289_2_reg_4708 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_2_reg_4708_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_320 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln79_fu_2775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter4 : BOOLEAN;
    signal io_acc_block_signal_op398 : STD_LOGIC;
    signal ap_block_state7_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln79_reg_4699_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln79_fu_2781_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal and_ln289_2_fu_2859_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_2_reg_4708_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_2_reg_4708_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_2_reg_4708_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_fu_2865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln313_reg_4712 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_fu_2915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln317_reg_4716 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln323_fu_2939_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln323_reg_4720 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_data_0_V_reg_4725 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_data_0_V_reg_4725_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal DataOut_V_1_reg_4734 : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_data_V_1_load_reg_4743 : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_data_V_4_load_reg_4753 : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_data_V_4_load_reg_4753_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_data_V_2_load_reg_4763 : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_data_V_5_load_reg_4772 : STD_LOGIC_VECTOR (10 downto 0);
    signal kernel_data_V_5_load_reg_4772_pp0_iter2_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_fu_2997_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1116_1_fu_3003_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1116_2_fu_3009_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1116_3_fu_3015_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal DataOut_V_reg_4805 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_684_reg_4810 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_685_reg_4815 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_686_reg_4820 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_687_reg_4825 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_450_fu_3274_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_450_reg_4830 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_450_reg_4830_pp0_iter3_reg : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_691_reg_4835 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_692_reg_4840 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_693_reg_4845 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_694_reg_4850 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_696_reg_4856 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_698_reg_4861 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_703_reg_4866 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_705_reg_4871 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_706_reg_4876 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_708_reg_4881 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_709_reg_4886 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_711_reg_4891 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_713_reg_4896 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_714_reg_4902 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_715_reg_4907 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_716_reg_4912 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_717_reg_4917 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_718_reg_4922 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_719_reg_4927 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_720_reg_4933 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_721_reg_4939 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_fu_3895_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_reg_4944 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1885_fu_3911_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1885_reg_4949 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1888_fu_3917_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1888_reg_4954 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1888_reg_4954_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1892_fu_3923_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1892_reg_4959 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1896_fu_3929_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1896_reg_4964 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1896_reg_4964_pp0_iter3_reg : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1900_fu_3935_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_1900_reg_4969 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_1904_fu_3941_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1904_reg_4974 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1904_reg_4974_pp0_iter3_reg : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1910_fu_3947_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1910_reg_4979 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1930_fu_3953_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1930_reg_4984 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1940_fu_3969_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1940_reg_4989 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_336_fu_4095_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_336_reg_4994 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_704_reg_4999 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1880_fu_4284_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1880_reg_5004 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1881_fu_4288_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1881_reg_5009 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1886_fu_4305_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1886_reg_5014 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1889_fu_4311_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1889_reg_5019 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1894_fu_4340_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1894_reg_5024 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1897_fu_4346_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1897_reg_5029 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1902_fu_4375_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1902_reg_5034 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1907_fu_4391_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1907_reg_5039 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1911_fu_4406_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1911_reg_5044 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1912_fu_4412_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1912_reg_5049 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1914_fu_4428_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1914_reg_5054 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1918_fu_4434_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1918_reg_5059 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1920_fu_4440_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1920_reg_5064 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1922_fu_4456_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1922_reg_5069 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1925_fu_4462_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1925_reg_5074 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1927_fu_4478_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1927_reg_5079 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1932_fu_4507_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1932_reg_5084 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1934_fu_4513_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1934_reg_5089 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1936_fu_4522_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1936_reg_5094 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1941_fu_4540_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1941_reg_5099 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_data_4_V_fu_4556_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_4_V_reg_5104 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_1_fu_4573_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_0_V_1_reg_5109 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_fu_4590_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_1_V_reg_5114 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_fu_4607_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_2_V_reg_5119 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_fu_4625_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_3_V_reg_5124 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1919_fu_4638_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1919_reg_5129 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1923_fu_4650_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1923_reg_5134 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_data_6_V_fu_4667_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_6_V_reg_5139 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_fu_4680_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_7_V_reg_5144 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_phi_mux_storemerge_i_i_phi_fu_335_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter1_storemerge_i_i_reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_reg_pp0_iter0_storemerge_i_i_reg_331 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln326_fu_2871_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln328_fu_2889_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln321_fu_2921_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_sY_load : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_kernel_data_V_2_load : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_373_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_373_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_382_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_382_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_386_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_386_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_391_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_391_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_392_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_392_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_398_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_398_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_400_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_400_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_fu_411_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_411_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_fu_2811_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal tmp_89_fu_2831_p4 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln289_fu_2791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_1_fu_2801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_2_fu_2821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln289_3_fu_2841_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_1_fu_2853_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln289_fu_2847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln328_fu_2883_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln323_fu_2933_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln1116_fu_2997_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_1_fu_3003_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_2_fu_3009_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1116_3_fu_3015_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln_fu_3067_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_s_fu_3078_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_438_fu_3085_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_437_fu_3074_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln1118_fu_3093_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln_fu_3099_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_283_fu_3113_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_fu_3061_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_440_fu_3120_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1118_74_fu_3124_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_s_fu_3130_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_284_fu_3144_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_439_fu_3089_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_442_fu_3151_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln1118_fu_3155_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal grp_fu_391_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_436_fu_3064_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_565_fu_3181_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_382_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_285_fu_3216_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_445_fu_3210_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_447_fu_3223_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1118_75_fu_3227_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_688_fu_3233_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_692_fu_3247_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_689_fu_3253_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_423_fu_3267_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_444_fu_3207_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln1118_693_fu_3278_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_690_fu_3284_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal grp_fu_373_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_446_fu_3213_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_566_fu_3308_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_398_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_452_fu_3334_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_453_fu_3338_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_453_fu_3338_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_567_fu_3342_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_695_fu_3358_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_695_fu_3358_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal shl_ln1118_286_fu_3372_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_286_fu_3372_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_455_fu_3380_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_452_fu_3334_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_568_fu_3384_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_570_fu_3400_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_700_fu_3416_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_411_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_392_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal sext_ln1118_469_fu_3452_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_574_fu_3455_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_291_fu_3471_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_471_fu_3478_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_468_fu_3449_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1118_575_fu_3482_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_707_fu_3488_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_292_fu_3502_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_472_fu_3509_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1118_576_fu_3513_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_400_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_fu_386_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal shl_ln1118_294_fu_3555_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_477_fu_3562_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_578_fu_3566_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_712_fu_3572_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_476_fu_3552_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_579_fu_3586_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_295_fu_3602_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_475_fu_3549_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_480_fu_3609_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1118_76_fu_3613_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_580_fu_3629_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_581_fu_3645_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_582_fu_3651_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_484_fu_3667_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_485_fu_3671_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_485_fu_3671_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_583_fu_3675_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_424_fu_3691_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_424_fu_3691_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_484_fu_3667_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_488_fu_3699_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_695_fu_3703_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln1118_77_fu_3719_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_489_fu_3735_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_490_fu_3739_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_491_fu_3743_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_492_fu_3747_p0 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_492_fu_3747_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_584_fu_3751_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_296_fu_3767_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_296_fu_3767_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_495_fu_3775_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_585_fu_3779_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_297_fu_3795_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_297_fu_3795_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_490_fu_3739_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_497_fu_3803_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln1118_78_fu_3807_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln708_722_fu_3813_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_425_fu_3827_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_425_fu_3827_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_491_fu_3743_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_498_fu_3835_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_696_fu_3839_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_723_fu_3845_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_500_fu_3859_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_586_fu_3862_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_724_fu_3868_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln708_727_fu_3882_p4 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln703_1884_fu_3901_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_489_fu_3735_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_637_fu_3907_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_339_fu_3582_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_fu_3109_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_501_fu_3878_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln708_331_fu_3243_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_337_fu_3498_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_462_fu_3425_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_454_fu_3368_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_448_fu_3263_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_441_fu_3140_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_342_fu_3823_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_449_fu_3294_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_fu_3891_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln703_1939_fu_3959_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln1118_499_fu_3855_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_670_fu_3965_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_287_fu_3993_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_457_fu_4000_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_569_fu_4004_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_697_fu_4010_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_461_fu_4034_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sub_ln1118_571_fu_4037_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_699_fu_4043_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal shl_ln1118_288_fu_4057_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_289_fu_4068_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_463_fu_4064_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_464_fu_4075_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1118_572_fu_4079_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln708_701_fu_4085_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln1118_290_fu_4099_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_465_fu_4106_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_573_fu_4110_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_702_fu_4116_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_460_fu_4031_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_694_fu_4130_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln1118_293_fu_4152_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_473_fu_4159_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_577_fu_4163_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_710_fu_4169_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal shl_ln1118_298_fu_4219_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_502_fu_4226_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln1118_587_fu_4230_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln708_725_fu_4236_p4 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln1118_299_fu_4250_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_504_fu_4257_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_ln1118_588_fu_4261_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln708_726_fu_4267_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_482_fu_4192_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_456_fu_3990_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1883_fu_4292_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_636_fu_4298_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_638_fu_4302_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln708_335_fu_4053_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln708_333_fu_3987_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_486_fu_4198_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_470_fu_4146_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1891_fu_4317_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_494_fu_4213_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_642_fu_4327_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1893_fu_4330_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_641_fu_4323_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_643_fu_4336_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_503_fu_4246_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_487_fu_4201_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_496_fu_4216_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_635_fu_4281_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1899_fu_4352_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_479_fu_4186_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_647_fu_4362_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1901_fu_4365_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_646_fu_4358_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_648_fu_4371_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1906_fu_4381_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln708_343_fu_4277_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_651_fu_4387_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_330_fu_3975_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln708_338_fu_4149_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1909_fu_4397_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_653_fu_4403_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_481_fu_4189_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_466_fu_4126_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_332_fu_3984_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1913_fu_4418_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_341_fu_4207_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_655_fu_4424_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln1118_474_fu_4179_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_459_fu_4024_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_443_fu_3978_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_493_fu_4210_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1921_fu_4446_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1118_478_fu_4183_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_660_fu_4452_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln708_340_fu_4204_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1926_fu_4468_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln1118_458_fu_4020_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_663_fu_4474_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln1118_451_fu_3981_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln703_1929_fu_4484_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln703_666_fu_4494_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal add_ln703_1931_fu_4497_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln703_665_fu_4490_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_667_fu_4503_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln708_334_fu_4028_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1935_fu_4517_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_483_fu_4195_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln703_1938_fu_4527_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_669_fu_4533_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_671_fu_4537_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1882_fu_4549_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_639_fu_4553_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_640_fu_4562_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1890_fu_4565_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_644_fu_4570_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_645_fu_4579_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1898_fu_4582_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_649_fu_4587_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_650_fu_4596_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1905_fu_4599_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_652_fu_4604_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_654_fu_4613_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_656_fu_4616_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1915_fu_4619_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln1118_467_fu_4546_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal add_ln703_1917_fu_4630_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_657_fu_4635_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln703_659_fu_4644_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_661_fu_4647_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln703_664_fu_4656_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1928_fu_4659_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_668_fu_4664_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln703_1937_fu_4673_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_672_fu_4677_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_658_fu_4686_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal sext_ln703_662_fu_4689_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_373_ce : STD_LOGIC;
    signal grp_fu_382_ce : STD_LOGIC;
    signal grp_fu_386_ce : STD_LOGIC;
    signal grp_fu_391_ce : STD_LOGIC;
    signal grp_fu_392_ce : STD_LOGIC;
    signal grp_fu_398_ce : STD_LOGIC;
    signal grp_fu_400_ce : STD_LOGIC;
    signal grp_fu_411_ce : STD_LOGIC;
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_413 : BOOLEAN;
    signal ap_condition_171 : BOOLEAN;
    signal ap_condition_402 : BOOLEAN;
    signal ap_condition_419 : BOOLEAN;

    component myproject_mul_11s_6ns_17_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component myproject_mul_11s_6s_17_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (10 downto 0);
        din1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (16 downto 0) );
    end component;


    component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config3_s_line_buffbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (10 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;



begin
    line_buffer_Array_V_0_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config3_s_line_buffbkb
    generic map (
        DataWidth => 11,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_8,
        ce0 => line_buffer_Array_V_0_0_ce0,
        we0 => line_buffer_Array_V_0_0_we0,
        d0 => data_V_data_V_dout,
        q0 => line_buffer_Array_V_0_0_q0);

    line_buffer_Array_V_1_0_U : component conv_2d_cl_array_ap_fixed_1u_array_ap_fixed_16_6_5_3_0_8u_config3_s_line_buffbkb
    generic map (
        DataWidth => 11,
        AddressRange => 9,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => ap_const_lv4_8,
        ce0 => line_buffer_Array_V_1_0_ce0,
        we0 => line_buffer_Array_V_1_0_we0,
        d0 => DataOut_V_1_reg_4734,
        q0 => line_buffer_Array_V_1_0_q0);

    myproject_mul_11s_6ns_17_2_1_U4 : component myproject_mul_11s_6ns_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_373_p0,
        din1 => grp_fu_373_p1,
        ce => grp_fu_373_ce,
        dout => grp_fu_373_p2);

    myproject_mul_11s_6s_17_2_1_U5 : component myproject_mul_11s_6s_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_382_p0,
        din1 => grp_fu_382_p1,
        ce => grp_fu_382_ce,
        dout => grp_fu_382_p2);

    myproject_mul_11s_6s_17_2_1_U6 : component myproject_mul_11s_6s_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_386_p0,
        din1 => grp_fu_386_p1,
        ce => grp_fu_386_ce,
        dout => grp_fu_386_p2);

    myproject_mul_11s_6ns_17_2_1_U7 : component myproject_mul_11s_6ns_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_391_p0,
        din1 => grp_fu_391_p1,
        ce => grp_fu_391_ce,
        dout => grp_fu_391_p2);

    myproject_mul_11s_6s_17_2_1_U8 : component myproject_mul_11s_6s_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_392_p0,
        din1 => grp_fu_392_p1,
        ce => grp_fu_392_ce,
        dout => grp_fu_392_p2);

    myproject_mul_11s_6s_17_2_1_U9 : component myproject_mul_11s_6s_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_398_p0,
        din1 => grp_fu_398_p1,
        ce => grp_fu_398_ce,
        dout => grp_fu_398_p2);

    myproject_mul_11s_6ns_17_2_1_U10 : component myproject_mul_11s_6ns_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_400_p0,
        din1 => grp_fu_400_p1,
        ce => grp_fu_400_ce,
        dout => grp_fu_400_p2);

    myproject_mul_11s_6ns_17_2_1_U11 : component myproject_mul_11s_6ns_17_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 11,
        din1_WIDTH => 6,
        dout_WIDTH => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_411_p0,
        din1 => grp_fu_411_p1,
        ce => grp_fu_411_ce,
        dout => grp_fu_411_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_171)) then
                if ((ap_const_boolean_1 = ap_condition_413)) then 
                    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_331 <= ap_const_lv32_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_storemerge_i_i_reg_331 <= ap_phi_reg_pp0_iter0_storemerge_i_i_reg_331;
                end if;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0))) then 
                indvar_flatten_reg_320 <= add_ln79_fu_2781_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                indvar_flatten_reg_320 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    pX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_402)) then
                if ((icmp_ln313_fu_2865_p2 = ap_const_lv1_1)) then 
                    pX <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_2865_p2 = ap_const_lv1_0)) then 
                    pX <= add_ln326_fu_2871_p2;
                end if;
            end if; 
        end if;
    end process;

    pY_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_419)) then
                if ((icmp_ln317_fu_2915_p2 = ap_const_lv1_1)) then 
                    pY <= ap_const_lv32_0;
                elsif ((icmp_ln317_fu_2915_p2 = ap_const_lv1_0)) then 
                    pY <= add_ln321_fu_2921_p2;
                end if;
            end if; 
        end if;
    end process;

    sX_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_402)) then
                if ((icmp_ln313_fu_2865_p2 = ap_const_lv1_1)) then 
                    sX <= ap_const_lv32_0;
                elsif ((icmp_ln313_fu_2865_p2 = ap_const_lv1_0)) then 
                    sX <= select_ln328_fu_2889_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699 = ap_const_lv1_0))) then
                DataOut_V_1_reg_4734 <= line_buffer_Array_V_0_0_q0;
                kernel_data_V_1_load_reg_4743 <= kernel_data_V_1;
                kernel_data_V_2_load_reg_4763 <= ap_sig_allocacmp_kernel_data_V_2_load;
                kernel_data_V_4_load_reg_4753 <= kernel_data_V_4;
                kernel_data_V_5_load_reg_4772 <= kernel_data_V_5;
                tmp_data_0_V_reg_4725 <= data_V_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699_pp0_iter1_reg = ap_const_lv1_0))) then
                DataOut_V_reg_4805 <= line_buffer_Array_V_1_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter2_reg))) then
                add_ln703_1880_reg_5004 <= add_ln703_1880_fu_4284_p2;
                add_ln703_1881_reg_5009 <= add_ln703_1881_fu_4288_p2;
                add_ln703_1886_reg_5014 <= add_ln703_1886_fu_4305_p2;
                add_ln703_1889_reg_5019 <= add_ln703_1889_fu_4311_p2;
                add_ln703_1894_reg_5024 <= add_ln703_1894_fu_4340_p2;
                add_ln703_1897_reg_5029 <= add_ln703_1897_fu_4346_p2;
                add_ln703_1902_reg_5034 <= add_ln703_1902_fu_4375_p2;
                add_ln703_1907_reg_5039 <= add_ln703_1907_fu_4391_p2;
                add_ln703_1911_reg_5044 <= add_ln703_1911_fu_4406_p2;
                add_ln703_1912_reg_5049 <= add_ln703_1912_fu_4412_p2;
                add_ln703_1914_reg_5054 <= add_ln703_1914_fu_4428_p2;
                add_ln703_1918_reg_5059 <= add_ln703_1918_fu_4434_p2;
                add_ln703_1920_reg_5064 <= add_ln703_1920_fu_4440_p2;
                add_ln703_1922_reg_5069 <= add_ln703_1922_fu_4456_p2;
                add_ln703_1925_reg_5074 <= add_ln703_1925_fu_4462_p2;
                add_ln703_1927_reg_5079 <= add_ln703_1927_fu_4478_p2;
                add_ln703_1932_reg_5084 <= add_ln703_1932_fu_4507_p2;
                add_ln703_1934_reg_5089 <= add_ln703_1934_fu_4513_p2;
                add_ln703_1936_reg_5094 <= add_ln703_1936_fu_4522_p2;
                add_ln703_1941_reg_5099 <= add_ln703_1941_fu_4540_p2;
                sext_ln708_336_reg_4994 <= sext_ln708_336_fu_4095_p1;
                trunc_ln708_704_reg_4999 <= sub_ln1118_694_fu_4130_p2(13 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter1_reg))) then
                add_ln703_1885_reg_4949 <= add_ln703_1885_fu_3911_p2;
                add_ln703_1888_reg_4954 <= add_ln703_1888_fu_3917_p2;
                add_ln703_1892_reg_4959 <= add_ln703_1892_fu_3923_p2;
                add_ln703_1896_reg_4964 <= add_ln703_1896_fu_3929_p2;
                add_ln703_1900_reg_4969 <= add_ln703_1900_fu_3935_p2;
                add_ln703_1904_reg_4974 <= add_ln703_1904_fu_3941_p2;
                add_ln703_1910_reg_4979 <= add_ln703_1910_fu_3947_p2;
                add_ln703_1930_reg_4984 <= add_ln703_1930_fu_3953_p2;
                add_ln703_1940_reg_4989 <= add_ln703_1940_fu_3969_p2;
                add_ln703_reg_4944 <= add_ln703_fu_3895_p2;
                    sext_ln1118_450_reg_4830(14 downto 3) <= sext_ln1118_450_fu_3274_p1(14 downto 3);
                trunc_ln708_684_reg_4810 <= sub_ln1118_fu_3155_p2(14 downto 1);
                trunc_ln708_685_reg_4815 <= grp_fu_391_p2(16 downto 1);
                trunc_ln708_686_reg_4820 <= sub_ln1118_565_fu_3181_p2(11 downto 1);
                trunc_ln708_687_reg_4825 <= grp_fu_382_p2(16 downto 1);
                trunc_ln708_691_reg_4835 <= grp_fu_373_p2(16 downto 1);
                trunc_ln708_692_reg_4840 <= sub_ln1118_566_fu_3308_p2(11 downto 1);
                trunc_ln708_693_reg_4845 <= grp_fu_398_p2(16 downto 1);
                trunc_ln708_694_reg_4850 <= sub_ln1118_567_fu_3342_p2(11 downto 1);
                trunc_ln708_696_reg_4856 <= sub_ln1118_568_fu_3384_p2(13 downto 1);
                trunc_ln708_698_reg_4861 <= sub_ln1118_570_fu_3400_p2(13 downto 1);
                trunc_ln708_703_reg_4866 <= grp_fu_411_p2(16 downto 1);
                trunc_ln708_705_reg_4871 <= grp_fu_392_p2(16 downto 1);
                trunc_ln708_706_reg_4876 <= sub_ln1118_574_fu_3455_p2(11 downto 1);
                trunc_ln708_708_reg_4881 <= sub_ln1118_576_fu_3513_p2(15 downto 1);
                trunc_ln708_709_reg_4886 <= grp_fu_400_p2(16 downto 1);
                trunc_ln708_711_reg_4891 <= grp_fu_386_p2(16 downto 1);
                trunc_ln708_713_reg_4896 <= sub_ln1118_579_fu_3586_p2(11 downto 1);
                trunc_ln708_714_reg_4902 <= add_ln1118_76_fu_3613_p2(13 downto 1);
                trunc_ln708_715_reg_4907 <= sub_ln1118_580_fu_3629_p2(13 downto 1);
                trunc_ln708_716_reg_4912 <= sub_ln1118_582_fu_3651_p2(13 downto 1);
                trunc_ln708_717_reg_4917 <= sub_ln1118_583_fu_3675_p2(11 downto 1);
                trunc_ln708_718_reg_4922 <= sub_ln1118_695_fu_3703_p2(13 downto 1);
                trunc_ln708_719_reg_4927 <= add_ln1118_77_fu_3719_p2(13 downto 1);
                trunc_ln708_720_reg_4933 <= sub_ln1118_584_fu_3751_p2(11 downto 1);
                trunc_ln708_721_reg_4939 <= sub_ln1118_585_fu_3779_p2(12 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                add_ln703_1888_reg_4954_pp0_iter3_reg <= add_ln703_1888_reg_4954;
                add_ln703_1896_reg_4964_pp0_iter3_reg <= add_ln703_1896_reg_4964;
                add_ln703_1904_reg_4974_pp0_iter3_reg <= add_ln703_1904_reg_4974;
                and_ln289_2_reg_4708_pp0_iter2_reg <= and_ln289_2_reg_4708_pp0_iter1_reg;
                and_ln289_2_reg_4708_pp0_iter3_reg <= and_ln289_2_reg_4708_pp0_iter2_reg;
                and_ln289_2_reg_4708_pp0_iter4_reg <= and_ln289_2_reg_4708_pp0_iter3_reg;
                kernel_data_V_4_load_reg_4753_pp0_iter2_reg <= kernel_data_V_4_load_reg_4753;
                kernel_data_V_5_load_reg_4772_pp0_iter2_reg <= kernel_data_V_5_load_reg_4772;
                    sext_ln1118_450_reg_4830_pp0_iter3_reg(14 downto 3) <= sext_ln1118_450_reg_4830(14 downto 3);
                tmp_data_0_V_reg_4725_pp0_iter2_reg <= tmp_data_0_V_reg_4725;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter3_reg))) then
                add_ln703_1919_reg_5129 <= add_ln703_1919_fu_4638_p2;
                add_ln703_1923_reg_5134 <= add_ln703_1923_fu_4650_p2;
                tmp_data_0_V_1_reg_5109 <= tmp_data_0_V_1_fu_4573_p2;
                tmp_data_1_V_reg_5114 <= tmp_data_1_V_fu_4590_p2;
                tmp_data_2_V_reg_5119 <= tmp_data_2_V_fu_4607_p2;
                tmp_data_3_V_reg_5124 <= tmp_data_3_V_fu_4625_p2;
                tmp_data_4_V_reg_5104 <= tmp_data_4_V_fu_4556_p2;
                tmp_data_6_V_reg_5139 <= tmp_data_6_V_fu_4667_p2;
                tmp_data_7_V_reg_5144 <= tmp_data_7_V_fu_4680_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0))) then
                and_ln289_2_reg_4708 <= and_ln289_2_fu_2859_p2;
                icmp_ln313_reg_4712 <= icmp_ln313_fu_2865_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                and_ln289_2_reg_4708_pp0_iter1_reg <= and_ln289_2_reg_4708;
                icmp_ln79_reg_4699 <= icmp_ln79_fu_2775_p2;
                icmp_ln79_reg_4699_pp0_iter1_reg <= icmp_ln79_reg_4699;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_2865_p2 = ap_const_lv1_1) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0))) then
                icmp_ln317_reg_4716 <= icmp_ln317_fu_2915_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699 = ap_const_lv1_0))) then
                kernel_data_V_1 <= ap_sig_allocacmp_kernel_data_V_2_load;
                kernel_data_V_4 <= kernel_data_V_5;
                kernel_data_V_5 <= line_buffer_Array_V_0_0_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699_pp0_iter1_reg = ap_const_lv1_0))) then
                kernel_data_V_2 <= line_buffer_Array_V_1_0_q0;
                kernel_data_V_7 <= kernel_data_V_8;
                kernel_data_V_8 <= tmp_data_0_V_reg_4725;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_reg_4712 = ap_const_lv1_1))) then
                sY <= ap_phi_mux_storemerge_i_i_phi_fu_335_p4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_2865_p2 = ap_const_lv1_1) and (icmp_ln317_fu_2915_p2 = ap_const_lv1_0) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0))) then
                select_ln323_reg_4720 <= select_ln323_fu_2939_p3;
            end if;
        end if;
    end process;
    sext_ln1118_450_reg_4830(2 downto 0) <= "000";
    sext_ln1118_450_reg_4830_pp0_iter3_reg(2 downto 0) <= "000";

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, icmp_ln79_fu_2775_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter4)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln1118_74_fu_3124_p2 <= std_logic_vector(signed(sext_ln1118_fu_3061_p1) + signed(sext_ln1118_440_fu_3120_p1));
    add_ln1118_75_fu_3227_p2 <= std_logic_vector(signed(sext_ln1118_445_fu_3210_p1) + signed(sext_ln1118_447_fu_3223_p1));
    add_ln1118_76_fu_3613_p2 <= std_logic_vector(signed(sext_ln1118_475_fu_3549_p1) + signed(sext_ln1118_480_fu_3609_p1));
    add_ln1118_77_fu_3719_p2 <= std_logic_vector(signed(sext_ln1118_484_fu_3667_p1) + signed(sext_ln1118_488_fu_3699_p1));
    add_ln1118_78_fu_3807_p2 <= std_logic_vector(signed(sext_ln1118_490_fu_3739_p1) + signed(sext_ln1118_497_fu_3803_p1));
    add_ln1118_fu_3093_p2 <= std_logic_vector(signed(sext_ln1118_438_fu_3085_p1) + signed(sext_ln1118_437_fu_3074_p1));
    add_ln321_fu_2921_p2 <= std_logic_vector(unsigned(pY) + unsigned(ap_const_lv32_1));
    add_ln323_fu_2933_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_sY_load) + unsigned(ap_const_lv32_1));
    add_ln326_fu_2871_p2 <= std_logic_vector(unsigned(pX) + unsigned(ap_const_lv32_1));
    add_ln328_fu_2883_p2 <= std_logic_vector(unsigned(sX) + unsigned(ap_const_lv32_1));
    add_ln703_1880_fu_4284_p2 <= std_logic_vector(unsigned(trunc_ln708_691_reg_4835) + unsigned(trunc_ln708_685_reg_4815));
    add_ln703_1881_fu_4288_p2 <= std_logic_vector(unsigned(trunc_ln708_709_reg_4886) + unsigned(trunc_ln708_703_reg_4866));
    add_ln703_1882_fu_4549_p2 <= std_logic_vector(unsigned(add_ln703_1880_reg_5004) + unsigned(add_ln703_1881_reg_5009));
    add_ln703_1883_fu_4292_p2 <= std_logic_vector(signed(sext_ln1118_482_fu_4192_p1) + signed(sext_ln1118_456_fu_3990_p1));
    add_ln703_1884_fu_3901_p2 <= std_logic_vector(signed(sext_ln1118_492_fu_3747_p1) + signed(ap_const_lv12_F40));
    add_ln703_1885_fu_3911_p2 <= std_logic_vector(signed(sext_ln1118_489_fu_3735_p1) + signed(sext_ln703_637_fu_3907_p1));
    add_ln703_1886_fu_4305_p2 <= std_logic_vector(signed(sext_ln703_636_fu_4298_p1) + signed(sext_ln703_638_fu_4302_p1));
    add_ln703_1888_fu_3917_p2 <= std_logic_vector(signed(sext_ln708_339_fu_3582_p1) + signed(sext_ln708_fu_3109_p1));
    add_ln703_1889_fu_4311_p2 <= std_logic_vector(signed(sext_ln708_335_fu_4053_p1) + signed(sext_ln708_333_fu_3987_p1));
    add_ln703_1890_fu_4565_p2 <= std_logic_vector(unsigned(add_ln703_1888_reg_4954_pp0_iter3_reg) + unsigned(sext_ln703_640_fu_4562_p1));
    add_ln703_1891_fu_4317_p2 <= std_logic_vector(signed(sext_ln1118_486_fu_4198_p1) + signed(sext_ln1118_470_fu_4146_p1));
    add_ln703_1892_fu_3923_p2 <= std_logic_vector(signed(sext_ln1118_501_fu_3878_p1) + signed(ap_const_lv12_F80));
    add_ln703_1893_fu_4330_p2 <= std_logic_vector(signed(sext_ln1118_494_fu_4213_p1) + signed(sext_ln703_642_fu_4327_p1));
    add_ln703_1894_fu_4340_p2 <= std_logic_vector(signed(sext_ln703_641_fu_4323_p1) + signed(sext_ln703_643_fu_4336_p1));
    add_ln703_1896_fu_3929_p2 <= std_logic_vector(signed(sext_ln708_331_fu_3243_p1) + signed(sext_ln708_337_fu_3498_p1));
    add_ln703_1897_fu_4346_p2 <= std_logic_vector(signed(sext_ln1118_503_fu_4246_p1) + signed(sext_ln1118_487_fu_4201_p1));
    add_ln703_1898_fu_4582_p2 <= std_logic_vector(unsigned(add_ln703_1896_reg_4964_pp0_iter3_reg) + unsigned(sext_ln703_645_fu_4579_p1));
    add_ln703_1899_fu_4352_p2 <= std_logic_vector(signed(sext_ln1118_496_fu_4216_p1) + signed(sext_ln703_635_fu_4281_p1));
    add_ln703_1900_fu_3935_p2 <= std_logic_vector(signed(sext_ln1118_462_fu_3425_p1) + signed(sext_ln1118_454_fu_3368_p1));
    add_ln703_1901_fu_4365_p2 <= std_logic_vector(signed(sext_ln1118_479_fu_4186_p1) + signed(sext_ln703_647_fu_4362_p1));
    add_ln703_1902_fu_4375_p2 <= std_logic_vector(signed(sext_ln703_646_fu_4358_p1) + signed(sext_ln703_648_fu_4371_p1));
    add_ln703_1904_fu_3941_p2 <= std_logic_vector(signed(sext_ln1118_448_fu_3263_p1) + signed(sext_ln1118_441_fu_3140_p1));
    add_ln703_1905_fu_4599_p2 <= std_logic_vector(signed(sext_ln708_336_reg_4994) + signed(sext_ln703_650_fu_4596_p1));
    add_ln703_1906_fu_4381_p2 <= std_logic_vector(signed(sext_ln1118_486_fu_4198_p1) + signed(ap_const_lv12_FC0));
    add_ln703_1907_fu_4391_p2 <= std_logic_vector(signed(sext_ln708_343_fu_4277_p1) + signed(sext_ln703_651_fu_4387_p1));
    add_ln703_1909_fu_4397_p2 <= std_logic_vector(signed(sext_ln708_330_fu_3975_p1) + signed(sext_ln708_338_fu_4149_p1));
    add_ln703_1910_fu_3947_p2 <= std_logic_vector(signed(sext_ln708_342_fu_3823_p1) + signed(sext_ln1118_449_fu_3294_p1));
    add_ln703_1911_fu_4406_p2 <= std_logic_vector(unsigned(add_ln703_1909_fu_4397_p2) + unsigned(sext_ln703_653_fu_4403_p1));
    add_ln703_1912_fu_4412_p2 <= std_logic_vector(signed(sext_ln1118_481_fu_4189_p1) + signed(sext_ln1118_466_fu_4126_p1));
    add_ln703_1913_fu_4418_p2 <= std_logic_vector(signed(sext_ln708_332_fu_3984_p1) + signed(sext_ln1118_502_fu_4226_p1));
    add_ln703_1914_fu_4428_p2 <= std_logic_vector(signed(sext_ln708_341_fu_4207_p1) + signed(sext_ln703_655_fu_4424_p1));
    add_ln703_1915_fu_4619_p2 <= std_logic_vector(signed(sext_ln703_654_fu_4613_p1) + signed(sext_ln703_656_fu_4616_p1));
    add_ln703_1917_fu_4630_p2 <= std_logic_vector(signed(sext_ln1118_467_fu_4546_p1) + signed(sext_ln1118_450_reg_4830_pp0_iter3_reg));
    add_ln703_1918_fu_4434_p2 <= std_logic_vector(signed(sext_ln1118_474_fu_4179_p1) + signed(sext_ln1118_459_fu_4024_p1));
    add_ln703_1919_fu_4638_p2 <= std_logic_vector(unsigned(add_ln703_1917_fu_4630_p2) + unsigned(sext_ln703_657_fu_4635_p1));
    add_ln703_1920_fu_4440_p2 <= std_logic_vector(signed(sext_ln1118_443_fu_3978_p1) + signed(sext_ln708_343_fu_4277_p1));
    add_ln703_1921_fu_4446_p2 <= std_logic_vector(signed(sext_ln1118_493_fu_4210_p1) + signed(ap_const_lv12_F40));
    add_ln703_1922_fu_4456_p2 <= std_logic_vector(signed(sext_ln1118_478_fu_4183_p1) + signed(sext_ln703_660_fu_4452_p1));
    add_ln703_1923_fu_4650_p2 <= std_logic_vector(signed(sext_ln703_659_fu_4644_p1) + signed(sext_ln703_661_fu_4647_p1));
    add_ln703_1925_fu_4462_p2 <= std_logic_vector(signed(sext_ln708_340_fu_4204_p1) + signed(sext_ln708_336_fu_4095_p1));
    add_ln703_1926_fu_4468_p2 <= std_logic_vector(signed(sext_ln1118_443_fu_3978_p1) + signed(sext_ln1118_496_fu_4216_p1));
    add_ln703_1927_fu_4478_p2 <= std_logic_vector(signed(sext_ln1118_458_fu_4020_p1) + signed(sext_ln703_663_fu_4474_p1));
    add_ln703_1928_fu_4659_p2 <= std_logic_vector(unsigned(add_ln703_1925_reg_5074) + unsigned(sext_ln703_664_fu_4656_p1));
    add_ln703_1929_fu_4484_p2 <= std_logic_vector(signed(sext_ln1118_470_fu_4146_p1) + signed(sext_ln1118_451_fu_3981_p1));
    add_ln703_1930_fu_3953_p2 <= std_logic_vector(signed(sext_ln1118_501_fu_3878_p1) + signed(ap_const_lv12_F00));
    add_ln703_1931_fu_4497_p2 <= std_logic_vector(signed(sext_ln1118_478_fu_4183_p1) + signed(sext_ln703_666_fu_4494_p1));
    add_ln703_1932_fu_4507_p2 <= std_logic_vector(signed(sext_ln703_665_fu_4490_p1) + signed(sext_ln703_667_fu_4503_p1));
    add_ln703_1934_fu_4513_p2 <= std_logic_vector(unsigned(trunc_ln708_693_reg_4845) + unsigned(trunc_ln708_687_reg_4825));
    add_ln703_1935_fu_4517_p2 <= std_logic_vector(signed(sext_ln708_334_fu_4028_p1) + signed(trunc_ln708_711_reg_4891));
    add_ln703_1936_fu_4522_p2 <= std_logic_vector(unsigned(trunc_ln708_705_reg_4871) + unsigned(add_ln703_1935_fu_4517_p2));
    add_ln703_1937_fu_4673_p2 <= std_logic_vector(unsigned(add_ln703_1934_reg_5089) + unsigned(add_ln703_1936_reg_5094));
    add_ln703_1938_fu_4527_p2 <= std_logic_vector(signed(sext_ln1118_487_fu_4201_p1) + signed(sext_ln1118_483_fu_4195_p1));
    add_ln703_1939_fu_3959_p2 <= std_logic_vector(signed(sext_ln703_fu_3891_p1) + signed(ap_const_lv11_C0));
    add_ln703_1940_fu_3969_p2 <= std_logic_vector(signed(sext_ln1118_499_fu_3855_p1) + signed(sext_ln703_670_fu_3965_p1));
    add_ln703_1941_fu_4540_p2 <= std_logic_vector(signed(sext_ln703_669_fu_4533_p1) + signed(sext_ln703_671_fu_4537_p1));
    add_ln703_fu_3895_p2 <= std_logic_vector(signed(sext_ln1118_436_fu_3064_p1) + signed(ap_const_lv12_F00));
    add_ln79_fu_2781_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_320) + unsigned(ap_const_lv7_1));
    and_ln289_1_fu_2853_p2 <= (icmp_ln289_3_fu_2841_p2 and icmp_ln289_2_fu_2821_p2);
    and_ln289_2_fu_2859_p2 <= (and_ln289_fu_2847_p2 and and_ln289_1_fu_2853_p2);
    and_ln289_fu_2847_p2 <= (icmp_ln289_fu_2791_p2 and icmp_ln289_1_fu_2801_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state8 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(data_V_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_4699, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, io_acc_block_signal_op398)
    begin
                ap_block_pp0_stage0_01001 <= (((io_acc_block_signal_op398 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg)) or ((data_V_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln79_reg_4699 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(data_V_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_4699, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, io_acc_block_signal_op398)
    begin
                ap_block_pp0_stage0_11001 <= (((io_acc_block_signal_op398 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg)) or ((data_V_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln79_reg_4699 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(data_V_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln79_reg_4699, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, io_acc_block_signal_op398)
    begin
                ap_block_pp0_stage0_subdone <= (((io_acc_block_signal_op398 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg)) or ((data_V_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln79_reg_4699 = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(data_V_data_V_empty_n, icmp_ln79_reg_4699)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((data_V_data_V_empty_n = ap_const_logic_0) and (icmp_ln79_reg_4699 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter5_assign_proc : process(and_ln289_2_reg_4708_pp0_iter4_reg, io_acc_block_signal_op398)
    begin
                ap_block_state7_pp0_stage0_iter5 <= ((io_acc_block_signal_op398 = ap_const_logic_0) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg));
    end process;


    ap_condition_171_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_171 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001));
    end process;


    ap_condition_402_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln79_fu_2775_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0)
    begin
                ap_condition_402 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0));
    end process;


    ap_condition_413_assign_proc : process(icmp_ln79_fu_2775_p2, icmp_ln313_fu_2865_p2, icmp_ln317_fu_2915_p2)
    begin
                ap_condition_413 <= ((icmp_ln317_fu_2915_p2 = ap_const_lv1_1) and (icmp_ln313_fu_2865_p2 = ap_const_lv1_1) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0));
    end process;


    ap_condition_419_assign_proc : process(ap_CS_fsm_pp0_stage0, icmp_ln79_fu_2775_p2, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, icmp_ln313_fu_2865_p2)
    begin
                ap_condition_419 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln313_fu_2865_p2 = ap_const_lv1_1) and (icmp_ln79_fu_2775_p2 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln79_fu_2775_p2)
    begin
        if ((icmp_ln79_fu_2775_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_storemerge_i_i_phi_fu_335_p4_assign_proc : process(icmp_ln79_reg_4699, icmp_ln313_reg_4712, icmp_ln317_reg_4716, select_ln323_reg_4720, ap_phi_reg_pp0_iter1_storemerge_i_i_reg_331)
    begin
        if (((icmp_ln313_reg_4712 = ap_const_lv1_1) and (icmp_ln317_reg_4716 = ap_const_lv1_0) and (icmp_ln79_reg_4699 = ap_const_lv1_0))) then 
            ap_phi_mux_storemerge_i_i_phi_fu_335_p4 <= select_ln323_reg_4720;
        else 
            ap_phi_mux_storemerge_i_i_phi_fu_335_p4 <= ap_phi_reg_pp0_iter1_storemerge_i_i_reg_331;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_storemerge_i_i_reg_331 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    ap_ready <= internal_ap_ready;

    ap_sig_allocacmp_kernel_data_V_2_load_assign_proc : process(kernel_data_V_2, line_buffer_Array_V_1_0_q0, ap_block_pp0_stage0, icmp_ln79_reg_4699_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln79_reg_4699_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_kernel_data_V_2_load <= line_buffer_Array_V_1_0_q0;
        else 
            ap_sig_allocacmp_kernel_data_V_2_load <= kernel_data_V_2;
        end if; 
    end process;


    ap_sig_allocacmp_sY_load_assign_proc : process(sY, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln313_reg_4712, ap_phi_mux_storemerge_i_i_phi_fu_335_p4)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln313_reg_4712 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_sig_allocacmp_sY_load <= ap_phi_mux_storemerge_i_i_phi_fu_335_p4;
        else 
            ap_sig_allocacmp_sY_load <= sY;
        end if; 
    end process;


    data_V_data_V_blk_n_assign_proc : process(data_V_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln79_reg_4699)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln79_reg_4699 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_V_blk_n <= data_V_data_V_empty_n;
        else 
            data_V_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_4699, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699 = ap_const_lv1_0))) then 
            data_V_data_V_read <= ap_const_logic_1;
        else 
            data_V_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_373_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_373_ce <= ap_const_logic_1;
        else 
            grp_fu_373_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_373_p0 <= sext_ln1116_1_fu_3003_p1(11 - 1 downto 0);
    grp_fu_373_p1 <= ap_const_lv17_17(6 - 1 downto 0);

    grp_fu_382_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_382_ce <= ap_const_logic_1;
        else 
            grp_fu_382_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_382_p0 <= sext_ln1116_fu_2997_p1(11 - 1 downto 0);
    grp_fu_382_p1 <= ap_const_lv17_1FFE6(6 - 1 downto 0);

    grp_fu_386_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_386_ce <= ap_const_logic_1;
        else 
            grp_fu_386_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_386_p0 <= sext_ln1116_3_fu_3015_p1(11 - 1 downto 0);
    grp_fu_386_p1 <= ap_const_lv17_1FFE3(6 - 1 downto 0);

    grp_fu_391_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_391_ce <= ap_const_logic_1;
        else 
            grp_fu_391_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_391_p0 <= sext_ln1116_fu_2997_p1(11 - 1 downto 0);
    grp_fu_391_p1 <= ap_const_lv17_15(6 - 1 downto 0);

    grp_fu_392_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_392_ce <= ap_const_logic_1;
        else 
            grp_fu_392_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_392_p0 <= sext_ln1116_2_fu_3009_p1(11 - 1 downto 0);
    grp_fu_392_p1 <= ap_const_lv17_1FFE6(6 - 1 downto 0);

    grp_fu_398_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_398_ce <= ap_const_logic_1;
        else 
            grp_fu_398_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_398_p0 <= sext_ln1116_1_fu_3003_p1(11 - 1 downto 0);
    grp_fu_398_p1 <= ap_const_lv17_1FFE5(6 - 1 downto 0);

    grp_fu_400_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_400_ce <= ap_const_logic_1;
        else 
            grp_fu_400_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_400_p0 <= sext_ln1116_3_fu_3015_p1(11 - 1 downto 0);
    grp_fu_400_p1 <= ap_const_lv17_17(6 - 1 downto 0);

    grp_fu_411_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            grp_fu_411_ce <= ap_const_logic_1;
        else 
            grp_fu_411_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_411_p0 <= sext_ln1116_2_fu_3009_p1(11 - 1 downto 0);
    grp_fu_411_p1 <= ap_const_lv17_15(6 - 1 downto 0);
    icmp_ln289_1_fu_2801_p2 <= "1" when (ap_sig_allocacmp_sY_load = ap_const_lv32_2) else "0";
    icmp_ln289_2_fu_2821_p2 <= "1" when (signed(tmp_fu_2811_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_3_fu_2841_p2 <= "1" when (signed(tmp_89_fu_2831_p4) > signed(ap_const_lv31_0)) else "0";
    icmp_ln289_fu_2791_p2 <= "1" when (sX = ap_const_lv32_2) else "0";
    icmp_ln313_fu_2865_p2 <= "1" when (pX = ap_const_lv32_8) else "0";
    icmp_ln317_fu_2915_p2 <= "1" when (pY = ap_const_lv32_8) else "0";
    icmp_ln79_fu_2775_p2 <= "1" when (indvar_flatten_reg_320 = ap_const_lv7_51) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op398 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);

    line_buffer_Array_V_0_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_4699, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699 = ap_const_lv1_0))) then 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_0_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln79_reg_4699, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699 = ap_const_lv1_0))) then 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_0_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_ce0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln79_reg_4699_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699_pp0_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_Array_V_1_0_ce0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_Array_V_1_0_we0_assign_proc : process(ap_block_pp0_stage0_11001, icmp_ln79_reg_4699_pp0_iter1_reg, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln79_reg_4699_pp0_iter1_reg = ap_const_lv1_0))) then 
            line_buffer_Array_V_1_0_we0 <= ap_const_logic_1;
        else 
            line_buffer_Array_V_1_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_1_reg_5109;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_5114;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_5119;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_5124;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_5104;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= std_logic_vector(signed(sext_ln703_658_fu_4686_p1) + signed(sext_ln703_662_fu_4689_p1));

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_5139;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_5144;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter5, and_ln289_2_reg_4708_pp0_iter4_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_lv1_1 = and_ln289_2_reg_4708_pp0_iter4_reg))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln323_fu_2939_p3 <= 
        ap_const_lv32_1 when (icmp_ln289_1_fu_2801_p2(0) = '1') else 
        add_ln323_fu_2933_p2;
    select_ln328_fu_2889_p3 <= 
        ap_const_lv32_1 when (icmp_ln289_fu_2791_p2(0) = '1') else 
        add_ln328_fu_2883_p2;
    sext_ln1116_1_fu_3003_p0 <= ap_sig_allocacmp_kernel_data_V_2_load;
        sext_ln1116_1_fu_3003_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_1_fu_3003_p0),17));

    sext_ln1116_2_fu_3009_p0 <= kernel_data_V_4;
        sext_ln1116_2_fu_3009_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_2_fu_3009_p0),17));

    sext_ln1116_3_fu_3015_p0 <= kernel_data_V_5;
        sext_ln1116_3_fu_3015_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_3_fu_3015_p0),17));

    sext_ln1116_fu_2997_p0 <= kernel_data_V_1;
        sext_ln1116_fu_2997_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1116_fu_2997_p0),17));

        sext_ln1118_436_fu_3064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_1_load_reg_4743),12));

        sext_ln1118_437_fu_3074_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln_fu_3067_p3),16));

        sext_ln1118_438_fu_3085_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_3078_p3),16));

        sext_ln1118_439_fu_3089_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_s_fu_3078_p3),15));

        sext_ln1118_440_fu_3120_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_283_fu_3113_p3),14));

        sext_ln1118_441_fu_3140_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_s_fu_3130_p4),14));

        sext_ln1118_442_fu_3151_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_284_fu_3144_p3),15));

        sext_ln1118_443_fu_3978_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_686_reg_4820),13));

        sext_ln1118_444_fu_3207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_2_load_reg_4763),15));

        sext_ln1118_445_fu_3210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_2_load_reg_4763),14));

        sext_ln1118_446_fu_3213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_2_load_reg_4763),12));

        sext_ln1118_447_fu_3223_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_285_fu_3216_p3),14));

        sext_ln1118_448_fu_3263_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_689_fu_3253_p4),14));

        sext_ln1118_449_fu_3294_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_690_fu_3284_p4),15));

        sext_ln1118_450_fu_3274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_423_fu_3267_p3),15));

        sext_ln1118_451_fu_3981_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_692_reg_4840),12));

    sext_ln1118_452_fu_3334_p0 <= line_buffer_Array_V_1_0_q0;
        sext_ln1118_452_fu_3334_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_452_fu_3334_p0),14));

    sext_ln1118_453_fu_3338_p0 <= line_buffer_Array_V_1_0_q0;
        sext_ln1118_453_fu_3338_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_453_fu_3338_p0),12));

        sext_ln1118_454_fu_3368_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_695_fu_3358_p4),11));

        sext_ln1118_455_fu_3380_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_286_fu_3372_p3),14));

        sext_ln1118_456_fu_3990_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_696_reg_4856),14));

        sext_ln1118_457_fu_4000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_287_fu_3993_p3),13));

        sext_ln1118_458_fu_4020_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_697_fu_4010_p4),14));

        sext_ln1118_459_fu_4024_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_697_fu_4010_p4),13));

        sext_ln1118_460_fu_4031_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_4_load_reg_4753_pp0_iter2_reg),14));

        sext_ln1118_461_fu_4034_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_4_load_reg_4753_pp0_iter2_reg),12));

        sext_ln1118_462_fu_3425_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_700_fu_3416_p4),11));

        sext_ln1118_463_fu_4064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_288_fu_4057_p3),16));

        sext_ln1118_464_fu_4075_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_289_fu_4068_p3),16));

        sext_ln1118_465_fu_4106_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_290_fu_4099_p3),14));

        sext_ln1118_466_fu_4126_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_702_fu_4116_p4),14));

        sext_ln1118_467_fu_4546_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_704_reg_4999),15));

        sext_ln1118_468_fu_3449_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_5_load_reg_4772),16));

        sext_ln1118_469_fu_3452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_5_load_reg_4772),12));

        sext_ln1118_470_fu_4146_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_706_reg_4876),12));

        sext_ln1118_471_fu_3478_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_291_fu_3471_p3),16));

        sext_ln1118_472_fu_3509_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_292_fu_3502_p3),16));

        sext_ln1118_473_fu_4159_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_293_fu_4152_p3),13));

        sext_ln1118_474_fu_4179_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_710_fu_4169_p4),13));

        sext_ln1118_475_fu_3549_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DataOut_V_1_reg_4734),14));

        sext_ln1118_476_fu_3552_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DataOut_V_1_reg_4734),12));

        sext_ln1118_477_fu_3562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_294_fu_3555_p3),13));

        sext_ln1118_478_fu_4183_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_713_reg_4896),13));

        sext_ln1118_479_fu_4186_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_713_reg_4896),12));

        sext_ln1118_480_fu_3609_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_295_fu_3602_p3),14));

        sext_ln1118_481_fu_4189_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_714_reg_4902),14));

        sext_ln1118_482_fu_4192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_715_reg_4907),14));

        sext_ln1118_483_fu_4195_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_716_reg_4912),14));

    sext_ln1118_484_fu_3667_p0 <= kernel_data_V_7;
        sext_ln1118_484_fu_3667_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_484_fu_3667_p0),14));

    sext_ln1118_485_fu_3671_p0 <= kernel_data_V_7;
        sext_ln1118_485_fu_3671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_485_fu_3671_p0),12));

        sext_ln1118_486_fu_4198_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_717_reg_4917),12));

        sext_ln1118_487_fu_4201_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_718_reg_4922),14));

        sext_ln1118_488_fu_3699_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_424_fu_3691_p3),14));

    sext_ln1118_489_fu_3735_p0 <= kernel_data_V_7;
        sext_ln1118_489_fu_3735_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_489_fu_3735_p0),13));

    sext_ln1118_490_fu_3739_p0 <= kernel_data_V_8;
        sext_ln1118_490_fu_3739_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_490_fu_3739_p0),15));

    sext_ln1118_491_fu_3743_p0 <= kernel_data_V_8;
        sext_ln1118_491_fu_3743_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_491_fu_3743_p0),14));

    sext_ln1118_492_fu_3747_p0 <= kernel_data_V_8;
        sext_ln1118_492_fu_3747_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln1118_492_fu_3747_p0),12));

        sext_ln1118_493_fu_4210_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_720_reg_4933),12));

        sext_ln1118_494_fu_4213_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_720_reg_4933),13));

        sext_ln1118_495_fu_3775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_296_fu_3767_p3),13));

        sext_ln1118_496_fu_4216_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_721_reg_4939),13));

        sext_ln1118_497_fu_3803_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_297_fu_3795_p3),15));

        sext_ln1118_498_fu_3835_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_425_fu_3827_p3),14));

        sext_ln1118_499_fu_3855_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_723_fu_3845_p4),14));

        sext_ln1118_500_fu_3859_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_data_0_V_reg_4725),12));

        sext_ln1118_501_fu_3878_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_724_fu_3868_p4),12));

        sext_ln1118_502_fu_4226_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_298_fu_4219_p3),14));

        sext_ln1118_503_fu_4246_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_725_fu_4236_p4),14));

        sext_ln1118_504_fu_4257_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(shl_ln1118_299_fu_4250_p3),13));

        sext_ln1118_fu_3061_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(kernel_data_V_1_load_reg_4743),14));

        sext_ln703_635_fu_4281_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_reg_4944),13));

        sext_ln703_636_fu_4298_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1883_fu_4292_p2),15));

        sext_ln703_637_fu_3907_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1884_fu_3901_p2),13));

        sext_ln703_638_fu_4302_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1885_reg_4949),15));

        sext_ln703_639_fu_4553_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1886_reg_5014),16));

        sext_ln703_640_fu_4562_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1889_reg_5019),16));

        sext_ln703_641_fu_4323_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1891_fu_4317_p2),14));

        sext_ln703_642_fu_4327_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1892_reg_4959),13));

        sext_ln703_643_fu_4336_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1893_fu_4330_p2),14));

        sext_ln703_644_fu_4570_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1894_reg_5024),16));

        sext_ln703_645_fu_4579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1897_reg_5029),16));

        sext_ln703_646_fu_4358_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1899_fu_4352_p2),14));

        sext_ln703_647_fu_4362_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1900_reg_4969),12));

        sext_ln703_648_fu_4371_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1901_fu_4365_p2),14));

        sext_ln703_649_fu_4587_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1902_reg_5034),16));

        sext_ln703_650_fu_4596_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1904_reg_4974_pp0_iter3_reg),16));

        sext_ln703_651_fu_4387_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1906_fu_4381_p2),13));

        sext_ln703_652_fu_4604_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1907_reg_5039),16));

        sext_ln703_653_fu_4403_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1910_reg_4979),16));

        sext_ln703_654_fu_4613_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1912_reg_5049),16));

        sext_ln703_655_fu_4424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1913_fu_4418_p2),15));

        sext_ln703_656_fu_4616_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1914_reg_5054),16));

        sext_ln703_657_fu_4635_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1918_reg_5059),15));

        sext_ln703_658_fu_4686_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1919_reg_5129),16));

        sext_ln703_659_fu_4644_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1920_reg_5064),14));

        sext_ln703_660_fu_4452_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1921_fu_4446_p2),13));

        sext_ln703_661_fu_4647_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1922_reg_5069),14));

        sext_ln703_662_fu_4689_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1923_reg_5134),16));

        sext_ln703_663_fu_4474_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1926_fu_4468_p2),14));

        sext_ln703_664_fu_4656_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1927_reg_5079),16));

        sext_ln703_665_fu_4490_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1929_fu_4484_p2),14));

        sext_ln703_666_fu_4494_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1930_reg_4984),13));

        sext_ln703_667_fu_4503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1931_fu_4497_p2),14));

        sext_ln703_668_fu_4664_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1932_reg_5084),16));

        sext_ln703_669_fu_4533_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1938_fu_4527_p2),15));

        sext_ln703_670_fu_3965_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1939_fu_3959_p2),14));

        sext_ln703_671_fu_4537_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1940_reg_4989),15));

        sext_ln703_672_fu_4677_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln703_1941_reg_5099),16));

        sext_ln703_fu_3891_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_727_fu_3882_p4),11));

        sext_ln708_330_fu_3975_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_684_reg_4810),16));

        sext_ln708_331_fu_3243_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_688_fu_3233_p4),16));

        sext_ln708_332_fu_3984_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_694_reg_4850),14));

        sext_ln708_333_fu_3987_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_694_reg_4850),12));

        sext_ln708_334_fu_4028_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_698_reg_4861),16));

        sext_ln708_335_fu_4053_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_699_fu_4043_p4),12));

        sext_ln708_336_fu_4095_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_701_fu_4085_p4),16));

        sext_ln708_337_fu_3498_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_707_fu_3488_p4),16));

        sext_ln708_338_fu_4149_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_708_reg_4881),16));

        sext_ln708_339_fu_3582_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_712_fu_3572_p4),16));

        sext_ln708_340_fu_4204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_719_reg_4927),16));

        sext_ln708_341_fu_4207_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_719_reg_4927),15));

        sext_ln708_342_fu_3823_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_722_fu_3813_p4),15));

        sext_ln708_343_fu_4277_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln708_726_fu_4267_p4),13));

        sext_ln708_fu_3109_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln_fu_3099_p4),16));

    shl_ln1118_283_fu_3113_p3 <= (kernel_data_V_1_load_reg_4743 & ap_const_lv2_0);
    shl_ln1118_284_fu_3144_p3 <= (kernel_data_V_1_load_reg_4743 & ap_const_lv3_0);
    shl_ln1118_285_fu_3216_p3 <= (kernel_data_V_2_load_reg_4763 & ap_const_lv2_0);
    shl_ln1118_286_fu_3372_p1 <= line_buffer_Array_V_1_0_q0;
    shl_ln1118_286_fu_3372_p3 <= (shl_ln1118_286_fu_3372_p1 & ap_const_lv2_0);
    shl_ln1118_287_fu_3993_p3 <= (DataOut_V_reg_4805 & ap_const_lv1_0);
    shl_ln1118_288_fu_4057_p3 <= (kernel_data_V_4_load_reg_4753_pp0_iter2_reg & ap_const_lv4_0);
    shl_ln1118_289_fu_4068_p3 <= (kernel_data_V_4_load_reg_4753_pp0_iter2_reg & ap_const_lv1_0);
    shl_ln1118_290_fu_4099_p3 <= (kernel_data_V_4_load_reg_4753_pp0_iter2_reg & ap_const_lv2_0);
    shl_ln1118_291_fu_3471_p3 <= (kernel_data_V_5_load_reg_4772 & ap_const_lv4_0);
    shl_ln1118_292_fu_3502_p3 <= (kernel_data_V_5_load_reg_4772 & ap_const_lv2_0);
    shl_ln1118_293_fu_4152_p3 <= (kernel_data_V_5_load_reg_4772_pp0_iter2_reg & ap_const_lv1_0);
    shl_ln1118_294_fu_3555_p3 <= (DataOut_V_1_reg_4734 & ap_const_lv1_0);
    shl_ln1118_295_fu_3602_p3 <= (DataOut_V_1_reg_4734 & ap_const_lv2_0);
    shl_ln1118_296_fu_3767_p1 <= kernel_data_V_8;
    shl_ln1118_296_fu_3767_p3 <= (shl_ln1118_296_fu_3767_p1 & ap_const_lv1_0);
    shl_ln1118_297_fu_3795_p1 <= kernel_data_V_8;
    shl_ln1118_297_fu_3795_p3 <= (shl_ln1118_297_fu_3795_p1 & ap_const_lv3_0);
    shl_ln1118_298_fu_4219_p3 <= (tmp_data_0_V_reg_4725_pp0_iter2_reg & ap_const_lv2_0);
    shl_ln1118_299_fu_4250_p3 <= (tmp_data_0_V_reg_4725_pp0_iter2_reg & ap_const_lv1_0);
    shl_ln1118_s_fu_3078_p3 <= (kernel_data_V_1_load_reg_4743 & ap_const_lv1_0);
    shl_ln_fu_3067_p3 <= (kernel_data_V_1_load_reg_4743 & ap_const_lv4_0);
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln1118_565_fu_3181_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_436_fu_3064_p1));
    sub_ln1118_566_fu_3308_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_446_fu_3213_p1));
    sub_ln1118_567_fu_3342_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_453_fu_3338_p1));
    sub_ln1118_568_fu_3384_p2 <= std_logic_vector(signed(sext_ln1118_455_fu_3380_p1) - signed(sext_ln1118_452_fu_3334_p1));
    sub_ln1118_569_fu_4004_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_457_fu_4000_p1));
    sub_ln1118_570_fu_3400_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_455_fu_3380_p1));
    sub_ln1118_571_fu_4037_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_461_fu_4034_p1));
    sub_ln1118_572_fu_4079_p2 <= std_logic_vector(signed(sext_ln1118_463_fu_4064_p1) - signed(sext_ln1118_464_fu_4075_p1));
    sub_ln1118_573_fu_4110_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_465_fu_4106_p1));
    sub_ln1118_574_fu_3455_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_469_fu_3452_p1));
    sub_ln1118_575_fu_3482_p2 <= std_logic_vector(signed(sext_ln1118_471_fu_3478_p1) - signed(sext_ln1118_468_fu_3449_p1));
    sub_ln1118_576_fu_3513_p2 <= std_logic_vector(signed(sext_ln1118_471_fu_3478_p1) - signed(sext_ln1118_472_fu_3509_p1));
    sub_ln1118_577_fu_4163_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_473_fu_4159_p1));
    sub_ln1118_578_fu_3566_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_477_fu_3562_p1));
    sub_ln1118_579_fu_3586_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_476_fu_3552_p1));
    sub_ln1118_580_fu_3629_p2 <= std_logic_vector(signed(sext_ln1118_480_fu_3609_p1) - signed(sext_ln1118_475_fu_3549_p1));
    sub_ln1118_581_fu_3645_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_480_fu_3609_p1));
    sub_ln1118_582_fu_3651_p2 <= std_logic_vector(unsigned(sub_ln1118_581_fu_3645_p2) - unsigned(sext_ln1118_475_fu_3549_p1));
    sub_ln1118_583_fu_3675_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_485_fu_3671_p1));
    sub_ln1118_584_fu_3751_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_492_fu_3747_p1));
    sub_ln1118_585_fu_3779_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_495_fu_3775_p1));
    sub_ln1118_586_fu_3862_p2 <= std_logic_vector(unsigned(ap_const_lv12_0) - unsigned(sext_ln1118_500_fu_3859_p1));
    sub_ln1118_587_fu_4230_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(sext_ln1118_502_fu_4226_p1));
    sub_ln1118_588_fu_4261_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(sext_ln1118_504_fu_4257_p1));
    sub_ln1118_692_fu_3247_p2 <= std_logic_vector(signed(sext_ln1118_445_fu_3210_p1) - signed(sext_ln1118_447_fu_3223_p1));
    sub_ln1118_693_fu_3278_p2 <= std_logic_vector(signed(sext_ln1118_444_fu_3207_p1) - signed(sext_ln1118_450_fu_3274_p1));
    sub_ln1118_694_fu_4130_p2 <= std_logic_vector(signed(sext_ln1118_460_fu_4031_p1) - signed(sext_ln1118_465_fu_4106_p1));
    sub_ln1118_695_fu_3703_p2 <= std_logic_vector(signed(sext_ln1118_484_fu_3667_p1) - signed(sext_ln1118_488_fu_3699_p1));
    sub_ln1118_696_fu_3839_p2 <= std_logic_vector(signed(sext_ln1118_491_fu_3743_p1) - signed(sext_ln1118_498_fu_3835_p1));
    sub_ln1118_fu_3155_p2 <= std_logic_vector(signed(sext_ln1118_439_fu_3089_p1) - signed(sext_ln1118_442_fu_3151_p1));
    tmp_423_fu_3267_p3 <= (kernel_data_V_2_load_reg_4763 & ap_const_lv3_0);
    tmp_424_fu_3691_p1 <= kernel_data_V_7;
    tmp_424_fu_3691_p3 <= (tmp_424_fu_3691_p1 & ap_const_lv2_0);
    tmp_425_fu_3827_p1 <= kernel_data_V_8;
    tmp_425_fu_3827_p3 <= (tmp_425_fu_3827_p1 & ap_const_lv2_0);
    tmp_89_fu_2831_p4 <= pX(31 downto 1);
    tmp_data_0_V_1_fu_4573_p2 <= std_logic_vector(unsigned(add_ln703_1890_fu_4565_p2) + unsigned(sext_ln703_644_fu_4570_p1));
    tmp_data_1_V_fu_4590_p2 <= std_logic_vector(unsigned(add_ln703_1898_fu_4582_p2) + unsigned(sext_ln703_649_fu_4587_p1));
    tmp_data_2_V_fu_4607_p2 <= std_logic_vector(unsigned(add_ln703_1905_fu_4599_p2) + unsigned(sext_ln703_652_fu_4604_p1));
    tmp_data_3_V_fu_4625_p2 <= std_logic_vector(unsigned(add_ln703_1911_reg_5044) + unsigned(add_ln703_1915_fu_4619_p2));
    tmp_data_4_V_fu_4556_p2 <= std_logic_vector(unsigned(add_ln703_1882_fu_4549_p2) + unsigned(sext_ln703_639_fu_4553_p1));
    tmp_data_6_V_fu_4667_p2 <= std_logic_vector(unsigned(add_ln703_1928_fu_4659_p2) + unsigned(sext_ln703_668_fu_4664_p1));
    tmp_data_7_V_fu_4680_p2 <= std_logic_vector(unsigned(add_ln703_1937_fu_4673_p2) + unsigned(sext_ln703_672_fu_4677_p1));
    tmp_fu_2811_p4 <= pY(31 downto 1);
    trunc_ln708_688_fu_3233_p4 <= add_ln1118_75_fu_3227_p2(13 downto 1);
    trunc_ln708_689_fu_3253_p4 <= sub_ln1118_692_fu_3247_p2(13 downto 1);
    trunc_ln708_690_fu_3284_p4 <= sub_ln1118_693_fu_3278_p2(14 downto 1);
    trunc_ln708_695_fu_3358_p1 <= line_buffer_Array_V_1_0_q0;
    trunc_ln708_695_fu_3358_p4 <= trunc_ln708_695_fu_3358_p1(10 downto 1);
    trunc_ln708_697_fu_4010_p4 <= sub_ln1118_569_fu_4004_p2(12 downto 1);
    trunc_ln708_699_fu_4043_p4 <= sub_ln1118_571_fu_4037_p2(11 downto 1);
    trunc_ln708_700_fu_3416_p4 <= kernel_data_V_4_load_reg_4753(10 downto 1);
    trunc_ln708_701_fu_4085_p4 <= sub_ln1118_572_fu_4079_p2(15 downto 1);
    trunc_ln708_702_fu_4116_p4 <= sub_ln1118_573_fu_4110_p2(13 downto 1);
    trunc_ln708_707_fu_3488_p4 <= sub_ln1118_575_fu_3482_p2(15 downto 1);
    trunc_ln708_710_fu_4169_p4 <= sub_ln1118_577_fu_4163_p2(12 downto 1);
    trunc_ln708_712_fu_3572_p4 <= sub_ln1118_578_fu_3566_p2(12 downto 1);
    trunc_ln708_722_fu_3813_p4 <= add_ln1118_78_fu_3807_p2(14 downto 1);
    trunc_ln708_723_fu_3845_p4 <= sub_ln1118_696_fu_3839_p2(13 downto 1);
    trunc_ln708_724_fu_3868_p4 <= sub_ln1118_586_fu_3862_p2(11 downto 1);
    trunc_ln708_725_fu_4236_p4 <= sub_ln1118_587_fu_4230_p2(13 downto 1);
    trunc_ln708_726_fu_4267_p4 <= sub_ln1118_588_fu_4261_p2(12 downto 1);
    trunc_ln708_727_fu_3882_p4 <= tmp_data_0_V_reg_4725(10 downto 1);
    trunc_ln708_s_fu_3130_p4 <= add_ln1118_74_fu_3124_p2(13 downto 1);
    trunc_ln_fu_3099_p4 <= add_ln1118_fu_3093_p2(15 downto 1);
end behav;
