-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity relu_array_ap_fixed_8u_array_ap_ufixed_12_3_4_0_0_8u_relu_config5_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    data_V_data_0_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_0_V_empty_n : IN STD_LOGIC;
    data_V_data_0_V_read : OUT STD_LOGIC;
    data_V_data_1_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_1_V_empty_n : IN STD_LOGIC;
    data_V_data_1_V_read : OUT STD_LOGIC;
    data_V_data_2_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_2_V_empty_n : IN STD_LOGIC;
    data_V_data_2_V_read : OUT STD_LOGIC;
    data_V_data_3_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_3_V_empty_n : IN STD_LOGIC;
    data_V_data_3_V_read : OUT STD_LOGIC;
    data_V_data_4_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_4_V_empty_n : IN STD_LOGIC;
    data_V_data_4_V_read : OUT STD_LOGIC;
    data_V_data_5_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_5_V_empty_n : IN STD_LOGIC;
    data_V_data_5_V_read : OUT STD_LOGIC;
    data_V_data_6_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_6_V_empty_n : IN STD_LOGIC;
    data_V_data_6_V_read : OUT STD_LOGIC;
    data_V_data_7_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    data_V_data_7_V_empty_n : IN STD_LOGIC;
    data_V_data_7_V_read : OUT STD_LOGIC;
    res_V_data_0_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_0_V_full_n : IN STD_LOGIC;
    res_V_data_0_V_write : OUT STD_LOGIC;
    res_V_data_1_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_1_V_full_n : IN STD_LOGIC;
    res_V_data_1_V_write : OUT STD_LOGIC;
    res_V_data_2_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_2_V_full_n : IN STD_LOGIC;
    res_V_data_2_V_write : OUT STD_LOGIC;
    res_V_data_3_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_3_V_full_n : IN STD_LOGIC;
    res_V_data_3_V_write : OUT STD_LOGIC;
    res_V_data_4_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_4_V_full_n : IN STD_LOGIC;
    res_V_data_4_V_write : OUT STD_LOGIC;
    res_V_data_5_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_5_V_full_n : IN STD_LOGIC;
    res_V_data_5_V_write : OUT STD_LOGIC;
    res_V_data_6_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_6_V_full_n : IN STD_LOGIC;
    res_V_data_6_V_write : OUT STD_LOGIC;
    res_V_data_7_V_din : OUT STD_LOGIC_VECTOR (11 downto 0);
    res_V_data_7_V_full_n : IN STD_LOGIC;
    res_V_data_7_V_write : OUT STD_LOGIC );
end;


architecture behav of relu_array_ap_fixed_8u_array_ap_ufixed_12_3_4_0_0_8u_relu_config5_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv12_FFF : STD_LOGIC_VECTOR (11 downto 0) := "111111111111";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal data_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln41_reg_1291 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_V_data_1_V_blk_n : STD_LOGIC;
    signal data_V_data_2_V_blk_n : STD_LOGIC;
    signal data_V_data_3_V_blk_n : STD_LOGIC;
    signal data_V_data_4_V_blk_n : STD_LOGIC;
    signal data_V_data_5_V_blk_n : STD_LOGIC;
    signal data_V_data_6_V_blk_n : STD_LOGIC;
    signal data_V_data_7_V_blk_n : STD_LOGIC;
    signal res_V_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal icmp_ln41_reg_1291_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal res_V_data_1_V_blk_n : STD_LOGIC;
    signal res_V_data_2_V_blk_n : STD_LOGIC;
    signal res_V_data_3_V_blk_n : STD_LOGIC;
    signal res_V_data_4_V_blk_n : STD_LOGIC;
    signal res_V_data_5_V_blk_n : STD_LOGIC;
    signal res_V_data_6_V_blk_n : STD_LOGIC;
    signal res_V_data_7_V_blk_n : STD_LOGIC;
    signal i_0_reg_340 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln41_fu_351_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state2_pp0_stage0_iter0 : BOOLEAN;
    signal io_acc_block_signal_op29 : STD_LOGIC;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter2 : BOOLEAN;
    signal io_acc_block_signal_op177 : STD_LOGIC;
    signal ap_block_state5_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln41_reg_1291_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_357_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal tmp_data_V_0_reg_1300 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_1_reg_1306 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_2_reg_1312 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_3_reg_1318 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_418_reg_1324 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_5_reg_1330 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_6_reg_1336 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_data_V_7_reg_1342 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln415_fu_427_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_reg_1348 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_fu_443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_reg_1354 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_reg_1359 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_1_fu_487_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_1_reg_1364 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_1_fu_503_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_1_reg_1370 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_1_reg_1375 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_2_fu_547_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_2_reg_1380 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_2_fu_563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_2_reg_1386 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_fu_569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_2_reg_1391 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_3_fu_607_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_3_reg_1396 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_3_fu_623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_3_reg_1402 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_3_reg_1407 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_4_fu_667_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_4_reg_1412 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_4_fu_683_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_4_reg_1418 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_4_reg_1423 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_5_fu_727_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_5_reg_1428 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_5_fu_743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_5_reg_1434 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_fu_749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_5_reg_1439 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_6_fu_787_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_6_reg_1444 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_6_fu_803_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_6_reg_1450 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_fu_809_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_6_reg_1455 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln415_7_fu_847_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln415_7_reg_1460 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln879_7_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_7_reg_1466 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_7_fu_869_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln768_7_reg_1471 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_data_0_V_fu_919_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_0_V_reg_1476 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_1_V_fu_971_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_1_V_reg_1481 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_2_V_fu_1023_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_2_V_reg_1486 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_3_V_fu_1075_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_3_V_reg_1491 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_4_V_fu_1127_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_4_V_reg_1496 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_5_V_fu_1179_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_5_V_reg_1501 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_6_V_fu_1231_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_6_V_reg_1506 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_7_V_fu_1283_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_data_7_V_reg_1511 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state2 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal trunc_ln412_fu_413_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_1_fu_405_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_fu_417_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_fu_423_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln_fu_395_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_fu_433_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_1_fu_473_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_465_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_1_fu_477_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_1_fu_483_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_1_fu_455_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_1_fu_493_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_2_fu_533_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_525_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_2_fu_537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_2_fu_543_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_2_fu_515_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_2_fu_553_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_3_fu_593_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_10_fu_585_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_3_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_3_fu_603_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_3_fu_575_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_3_fu_613_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_4_fu_653_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_13_fu_645_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_4_fu_657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_4_fu_663_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_4_fu_635_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_4_fu_673_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_5_fu_713_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_705_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_5_fu_717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_5_fu_723_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_5_fu_695_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_5_fu_733_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_6_fu_773_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_765_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_6_fu_777_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_6_fu_783_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_6_fu_755_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_6_fu_793_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln412_7_fu_833_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_825_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln415_7_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln415_7_fu_843_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln708_7_fu_815_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal p_Result_2_7_fu_853_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_3_fu_887_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_2_fu_880_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_fu_894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_fu_900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_fu_906_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_fu_912_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_939_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_5_fu_932_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_1_fu_946_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_1_fu_952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_1_fu_958_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_1_fu_927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_1_fu_964_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_991_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_8_fu_984_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_2_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_2_fu_1004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_2_fu_1010_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_2_fu_979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_2_fu_1016_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_1043_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_11_fu_1036_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_3_fu_1050_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_3_fu_1056_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_3_fu_1062_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_3_fu_1031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_3_fu_1068_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_1095_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1088_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_4_fu_1102_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_4_fu_1108_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_4_fu_1114_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_4_fu_1083_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_4_fu_1120_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_1147_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_17_fu_1140_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_5_fu_1154_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_5_fu_1160_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_5_fu_1166_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_5_fu_1135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_5_fu_1172_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_1199_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1192_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_6_fu_1206_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_6_fu_1212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_6_fu_1218_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_6_fu_1187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_6_fu_1224_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_fu_1251_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_23_fu_1244_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln416_7_fu_1258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln416_7_fu_1264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln777_7_fu_1270_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_7_fu_1239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln340_7_fu_1276_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state2)) then 
                        ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state2);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_0_reg_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_fu_351_p2 = ap_const_lv1_0))) then 
                i_0_reg_340 <= i_fu_357_p2;
            elsif ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_340 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then
                add_ln415_1_reg_1364 <= add_ln415_1_fu_487_p2;
                add_ln415_2_reg_1380 <= add_ln415_2_fu_547_p2;
                add_ln415_3_reg_1396 <= add_ln415_3_fu_607_p2;
                add_ln415_4_reg_1412 <= add_ln415_4_fu_667_p2;
                add_ln415_5_reg_1428 <= add_ln415_5_fu_727_p2;
                add_ln415_6_reg_1444 <= add_ln415_6_fu_787_p2;
                add_ln415_7_reg_1460 <= add_ln415_7_fu_847_p2;
                add_ln415_reg_1348 <= add_ln415_fu_427_p2;
                icmp_ln768_1_reg_1375 <= icmp_ln768_1_fu_509_p2;
                icmp_ln768_2_reg_1391 <= icmp_ln768_2_fu_569_p2;
                icmp_ln768_3_reg_1407 <= icmp_ln768_3_fu_629_p2;
                icmp_ln768_4_reg_1423 <= icmp_ln768_4_fu_689_p2;
                icmp_ln768_5_reg_1439 <= icmp_ln768_5_fu_749_p2;
                icmp_ln768_6_reg_1455 <= icmp_ln768_6_fu_809_p2;
                icmp_ln768_7_reg_1471 <= icmp_ln768_7_fu_869_p2;
                icmp_ln768_reg_1359 <= icmp_ln768_fu_449_p2;
                icmp_ln879_1_reg_1370 <= icmp_ln879_1_fu_503_p2;
                icmp_ln879_2_reg_1386 <= icmp_ln879_2_fu_563_p2;
                icmp_ln879_3_reg_1402 <= icmp_ln879_3_fu_623_p2;
                icmp_ln879_4_reg_1418 <= icmp_ln879_4_fu_683_p2;
                icmp_ln879_5_reg_1434 <= icmp_ln879_5_fu_743_p2;
                icmp_ln879_6_reg_1450 <= icmp_ln879_6_fu_803_p2;
                icmp_ln879_7_reg_1466 <= icmp_ln879_7_fu_863_p2;
                icmp_ln879_reg_1354 <= icmp_ln879_fu_443_p2;
                tmp_data_V_0_reg_1300 <= data_V_data_0_V_dout;
                tmp_data_V_1_reg_1306 <= data_V_data_1_V_dout;
                tmp_data_V_2_reg_1312 <= data_V_data_2_V_dout;
                tmp_data_V_3_reg_1318 <= data_V_data_3_V_dout;
                tmp_data_V_418_reg_1324 <= data_V_data_4_V_dout;
                tmp_data_V_5_reg_1330 <= data_V_data_5_V_dout;
                tmp_data_V_6_reg_1336 <= data_V_data_6_V_dout;
                tmp_data_V_7_reg_1342 <= data_V_data_7_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln41_reg_1291 <= icmp_ln41_fu_351_p2;
                icmp_ln41_reg_1291_pp0_iter1_reg <= icmp_ln41_reg_1291;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp0_stage0_11001)) then
                icmp_ln41_reg_1291_pp0_iter2_reg <= icmp_ln41_reg_1291_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter1_reg = ap_const_lv1_0))) then
                tmp_data_0_V_reg_1476 <= tmp_data_0_V_fu_919_p3;
                tmp_data_1_V_reg_1481 <= tmp_data_1_V_fu_971_p3;
                tmp_data_2_V_reg_1486 <= tmp_data_2_V_fu_1023_p3;
                tmp_data_3_V_reg_1491 <= tmp_data_3_V_fu_1075_p3;
                tmp_data_4_V_reg_1496 <= tmp_data_4_V_fu_1127_p3;
                tmp_data_5_V_reg_1501 <= tmp_data_5_V_fu_1179_p3;
                tmp_data_6_V_reg_1506 <= tmp_data_6_V_fu_1231_p3;
                tmp_data_7_V_reg_1511 <= tmp_data_7_V_fu_1283_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, icmp_ln41_fu_351_p2, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln41_fu_351_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) and not(((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln41_fu_351_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;
    add_ln415_1_fu_487_p2 <= std_logic_vector(unsigned(zext_ln415_1_fu_483_p1) + unsigned(trunc_ln708_1_fu_455_p4));
    add_ln415_2_fu_547_p2 <= std_logic_vector(unsigned(zext_ln415_2_fu_543_p1) + unsigned(trunc_ln708_2_fu_515_p4));
    add_ln415_3_fu_607_p2 <= std_logic_vector(unsigned(zext_ln415_3_fu_603_p1) + unsigned(trunc_ln708_3_fu_575_p4));
    add_ln415_4_fu_667_p2 <= std_logic_vector(unsigned(zext_ln415_4_fu_663_p1) + unsigned(trunc_ln708_4_fu_635_p4));
    add_ln415_5_fu_727_p2 <= std_logic_vector(unsigned(zext_ln415_5_fu_723_p1) + unsigned(trunc_ln708_5_fu_695_p4));
    add_ln415_6_fu_787_p2 <= std_logic_vector(unsigned(zext_ln415_6_fu_783_p1) + unsigned(trunc_ln708_6_fu_755_p4));
    add_ln415_7_fu_847_p2 <= std_logic_vector(unsigned(zext_ln415_7_fu_843_p1) + unsigned(trunc_ln708_7_fu_815_p4));
    add_ln415_fu_427_p2 <= std_logic_vector(unsigned(zext_ln415_fu_423_p1) + unsigned(trunc_ln_fu_395_p4));
    and_ln415_1_fu_477_p2 <= (trunc_ln412_1_fu_473_p1 and tmp_4_fu_465_p3);
    and_ln415_2_fu_537_p2 <= (trunc_ln412_2_fu_533_p1 and tmp_7_fu_525_p3);
    and_ln415_3_fu_597_p2 <= (trunc_ln412_3_fu_593_p1 and tmp_10_fu_585_p3);
    and_ln415_4_fu_657_p2 <= (trunc_ln412_4_fu_653_p1 and tmp_13_fu_645_p3);
    and_ln415_5_fu_717_p2 <= (trunc_ln412_5_fu_713_p1 and tmp_16_fu_705_p3);
    and_ln415_6_fu_777_p2 <= (trunc_ln412_6_fu_773_p1 and tmp_19_fu_765_p3);
    and_ln415_7_fu_837_p2 <= (trunc_ln412_7_fu_833_p1 and tmp_22_fu_825_p3);
    and_ln415_fu_417_p2 <= (trunc_ln412_fu_413_p1 and tmp_1_fu_405_p3);
    and_ln416_1_fu_952_p2 <= (xor_ln416_1_fu_946_p2 and tmp_5_fu_932_p3);
    and_ln416_2_fu_1004_p2 <= (xor_ln416_2_fu_998_p2 and tmp_8_fu_984_p3);
    and_ln416_3_fu_1056_p2 <= (xor_ln416_3_fu_1050_p2 and tmp_11_fu_1036_p3);
    and_ln416_4_fu_1108_p2 <= (xor_ln416_4_fu_1102_p2 and tmp_14_fu_1088_p3);
    and_ln416_5_fu_1160_p2 <= (xor_ln416_5_fu_1154_p2 and tmp_17_fu_1140_p3);
    and_ln416_6_fu_1212_p2 <= (xor_ln416_6_fu_1206_p2 and tmp_20_fu_1192_p3);
    and_ln416_7_fu_1264_p2 <= (xor_ln416_7_fu_1258_p2 and tmp_23_fu_1244_p3);
    and_ln416_fu_900_p2 <= (xor_ln416_fu_894_p2 and tmp_2_fu_880_p3);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(1);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state6 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, io_acc_block_signal_op29, io_acc_block_signal_op177)
    begin
                ap_block_pp0_stage0_01001 <= (((io_acc_block_signal_op177 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0)) or ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln41_reg_1291 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, io_acc_block_signal_op29, io_acc_block_signal_op177)
    begin
                ap_block_pp0_stage0_11001 <= (((io_acc_block_signal_op177 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0)) or ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln41_reg_1291 = ap_const_lv1_0)));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, io_acc_block_signal_op29, io_acc_block_signal_op177)
    begin
                ap_block_pp0_stage0_subdone <= (((io_acc_block_signal_op177 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0)) or ((io_acc_block_signal_op29 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln41_reg_1291 = ap_const_lv1_0)));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg)
    begin
                ap_block_state1 <= ((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state2_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(icmp_ln41_reg_1291, io_acc_block_signal_op29)
    begin
                ap_block_state3_pp0_stage0_iter1 <= ((io_acc_block_signal_op29 = ap_const_logic_0) and (icmp_ln41_reg_1291 = ap_const_lv1_0));
    end process;

        ap_block_state4_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter3_assign_proc : process(icmp_ln41_reg_1291_pp0_iter2_reg, io_acc_block_signal_op177)
    begin
                ap_block_state5_pp0_stage0_iter3 <= ((io_acc_block_signal_op177 = ap_const_logic_0) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state2_assign_proc : process(icmp_ln41_fu_351_p2)
    begin
        if ((icmp_ln41_fu_351_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    data_V_data_0_V_blk_n_assign_proc : process(data_V_data_0_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_0_V_blk_n <= data_V_data_0_V_empty_n;
        else 
            data_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_0_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_0_V_read <= ap_const_logic_1;
        else 
            data_V_data_0_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_1_V_blk_n_assign_proc : process(data_V_data_1_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_1_V_blk_n <= data_V_data_1_V_empty_n;
        else 
            data_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_1_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_1_V_read <= ap_const_logic_1;
        else 
            data_V_data_1_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_2_V_blk_n_assign_proc : process(data_V_data_2_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_2_V_blk_n <= data_V_data_2_V_empty_n;
        else 
            data_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_2_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_2_V_read <= ap_const_logic_1;
        else 
            data_V_data_2_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_3_V_blk_n_assign_proc : process(data_V_data_3_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_3_V_blk_n <= data_V_data_3_V_empty_n;
        else 
            data_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_3_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_3_V_read <= ap_const_logic_1;
        else 
            data_V_data_3_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_4_V_blk_n_assign_proc : process(data_V_data_4_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_4_V_blk_n <= data_V_data_4_V_empty_n;
        else 
            data_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_4_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_4_V_read <= ap_const_logic_1;
        else 
            data_V_data_4_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_5_V_blk_n_assign_proc : process(data_V_data_5_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_5_V_blk_n <= data_V_data_5_V_empty_n;
        else 
            data_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_5_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_5_V_read <= ap_const_logic_1;
        else 
            data_V_data_5_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_6_V_blk_n_assign_proc : process(data_V_data_6_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_6_V_blk_n <= data_V_data_6_V_empty_n;
        else 
            data_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_6_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_6_V_read <= ap_const_logic_1;
        else 
            data_V_data_6_V_read <= ap_const_logic_0;
        end if; 
    end process;


    data_V_data_7_V_blk_n_assign_proc : process(data_V_data_7_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln41_reg_1291)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln41_reg_1291 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            data_V_data_7_V_blk_n <= data_V_data_7_V_empty_n;
        else 
            data_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    data_V_data_7_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln41_reg_1291, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291 = ap_const_lv1_0))) then 
            data_V_data_7_V_read <= ap_const_logic_1;
        else 
            data_V_data_7_V_read <= ap_const_logic_0;
        end if; 
    end process;

    i_fu_357_p2 <= std_logic_vector(unsigned(i_0_reg_340) + unsigned(ap_const_lv5_1));
    icmp_ln1494_1_fu_927_p2 <= "1" when (signed(tmp_data_V_1_reg_1306) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_2_fu_979_p2 <= "1" when (signed(tmp_data_V_2_reg_1312) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_3_fu_1031_p2 <= "1" when (signed(tmp_data_V_3_reg_1318) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_4_fu_1083_p2 <= "1" when (signed(tmp_data_V_418_reg_1324) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_5_fu_1135_p2 <= "1" when (signed(tmp_data_V_5_reg_1330) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_6_fu_1187_p2 <= "1" when (signed(tmp_data_V_6_reg_1336) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_7_fu_1239_p2 <= "1" when (signed(tmp_data_V_7_reg_1342) > signed(ap_const_lv16_0)) else "0";
    icmp_ln1494_fu_875_p2 <= "1" when (signed(tmp_data_V_0_reg_1300) > signed(ap_const_lv16_0)) else "0";
    icmp_ln41_fu_351_p2 <= "1" when (i_0_reg_340 = ap_const_lv5_10) else "0";
    icmp_ln768_1_fu_509_p2 <= "1" when (p_Result_2_1_fu_493_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_2_fu_569_p2 <= "1" when (p_Result_2_2_fu_553_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_3_fu_629_p2 <= "1" when (p_Result_2_3_fu_613_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_4_fu_689_p2 <= "1" when (p_Result_2_4_fu_673_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_5_fu_749_p2 <= "1" when (p_Result_2_5_fu_733_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_6_fu_809_p2 <= "1" when (p_Result_2_6_fu_793_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_7_fu_869_p2 <= "1" when (p_Result_2_7_fu_853_p4 = ap_const_lv3_0) else "0";
    icmp_ln768_fu_449_p2 <= "1" when (p_Result_2_fu_433_p4 = ap_const_lv3_0) else "0";
    icmp_ln879_1_fu_503_p2 <= "1" when (p_Result_2_1_fu_493_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_2_fu_563_p2 <= "1" when (p_Result_2_2_fu_553_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_3_fu_623_p2 <= "1" when (p_Result_2_3_fu_613_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_4_fu_683_p2 <= "1" when (p_Result_2_4_fu_673_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_5_fu_743_p2 <= "1" when (p_Result_2_5_fu_733_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_6_fu_803_p2 <= "1" when (p_Result_2_6_fu_793_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_7_fu_863_p2 <= "1" when (p_Result_2_7_fu_853_p4 = ap_const_lv3_7) else "0";
    icmp_ln879_fu_443_p2 <= "1" when (p_Result_2_fu_433_p4 = ap_const_lv3_7) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    io_acc_block_signal_op177 <= (res_V_data_7_V_full_n and res_V_data_6_V_full_n and res_V_data_5_V_full_n and res_V_data_4_V_full_n and res_V_data_3_V_full_n and res_V_data_2_V_full_n and res_V_data_1_V_full_n and res_V_data_0_V_full_n);
    io_acc_block_signal_op29 <= (data_V_data_7_V_empty_n and data_V_data_6_V_empty_n and data_V_data_5_V_empty_n and data_V_data_4_V_empty_n and data_V_data_3_V_empty_n and data_V_data_2_V_empty_n and data_V_data_1_V_empty_n and data_V_data_0_V_empty_n);
    p_Result_2_1_fu_493_p4 <= data_V_data_1_V_dout(15 downto 13);
    p_Result_2_2_fu_553_p4 <= data_V_data_2_V_dout(15 downto 13);
    p_Result_2_3_fu_613_p4 <= data_V_data_3_V_dout(15 downto 13);
    p_Result_2_4_fu_673_p4 <= data_V_data_4_V_dout(15 downto 13);
    p_Result_2_5_fu_733_p4 <= data_V_data_5_V_dout(15 downto 13);
    p_Result_2_6_fu_793_p4 <= data_V_data_6_V_dout(15 downto 13);
    p_Result_2_7_fu_853_p4 <= data_V_data_7_V_dout(15 downto 13);
    p_Result_2_fu_433_p4 <= data_V_data_0_V_dout(15 downto 13);

    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;


    res_V_data_0_V_blk_n_assign_proc : process(res_V_data_0_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_0_V_blk_n <= res_V_data_0_V_full_n;
        else 
            res_V_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_0_V_din <= tmp_data_0_V_reg_1476;

    res_V_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_0_V_write <= ap_const_logic_1;
        else 
            res_V_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_1_V_blk_n_assign_proc : process(res_V_data_1_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_1_V_blk_n <= res_V_data_1_V_full_n;
        else 
            res_V_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_1_V_din <= tmp_data_1_V_reg_1481;

    res_V_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_1_V_write <= ap_const_logic_1;
        else 
            res_V_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_2_V_blk_n_assign_proc : process(res_V_data_2_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_2_V_blk_n <= res_V_data_2_V_full_n;
        else 
            res_V_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_2_V_din <= tmp_data_2_V_reg_1486;

    res_V_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_2_V_write <= ap_const_logic_1;
        else 
            res_V_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_3_V_blk_n_assign_proc : process(res_V_data_3_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_3_V_blk_n <= res_V_data_3_V_full_n;
        else 
            res_V_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_3_V_din <= tmp_data_3_V_reg_1491;

    res_V_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_3_V_write <= ap_const_logic_1;
        else 
            res_V_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_4_V_blk_n_assign_proc : process(res_V_data_4_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_4_V_blk_n <= res_V_data_4_V_full_n;
        else 
            res_V_data_4_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_4_V_din <= tmp_data_4_V_reg_1496;

    res_V_data_4_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_4_V_write <= ap_const_logic_1;
        else 
            res_V_data_4_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_5_V_blk_n_assign_proc : process(res_V_data_5_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_5_V_blk_n <= res_V_data_5_V_full_n;
        else 
            res_V_data_5_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_5_V_din <= tmp_data_5_V_reg_1501;

    res_V_data_5_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_5_V_write <= ap_const_logic_1;
        else 
            res_V_data_5_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_6_V_blk_n_assign_proc : process(res_V_data_6_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_6_V_blk_n <= res_V_data_6_V_full_n;
        else 
            res_V_data_6_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_6_V_din <= tmp_data_6_V_reg_1506;

    res_V_data_6_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_6_V_write <= ap_const_logic_1;
        else 
            res_V_data_6_V_write <= ap_const_logic_0;
        end if; 
    end process;


    res_V_data_7_V_blk_n_assign_proc : process(res_V_data_7_V_full_n, ap_block_pp0_stage0, ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            res_V_data_7_V_blk_n <= res_V_data_7_V_full_n;
        else 
            res_V_data_7_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    res_V_data_7_V_din <= tmp_data_7_V_reg_1511;

    res_V_data_7_V_write_assign_proc : process(ap_enable_reg_pp0_iter3, icmp_ln41_reg_1291_pp0_iter2_reg, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln41_reg_1291_pp0_iter2_reg = ap_const_lv1_0))) then 
            res_V_data_7_V_write <= ap_const_logic_1;
        else 
            res_V_data_7_V_write <= ap_const_logic_0;
        end if; 
    end process;

    select_ln340_1_fu_964_p3 <= 
        add_ln415_1_reg_1364 when (select_ln777_1_fu_958_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_2_fu_1016_p3 <= 
        add_ln415_2_reg_1380 when (select_ln777_2_fu_1010_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_3_fu_1068_p3 <= 
        add_ln415_3_reg_1396 when (select_ln777_3_fu_1062_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_4_fu_1120_p3 <= 
        add_ln415_4_reg_1412 when (select_ln777_4_fu_1114_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_5_fu_1172_p3 <= 
        add_ln415_5_reg_1428 when (select_ln777_5_fu_1166_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_6_fu_1224_p3 <= 
        add_ln415_6_reg_1444 when (select_ln777_6_fu_1218_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_7_fu_1276_p3 <= 
        add_ln415_7_reg_1460 when (select_ln777_7_fu_1270_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln340_fu_912_p3 <= 
        add_ln415_reg_1348 when (select_ln777_fu_906_p3(0) = '1') else 
        ap_const_lv12_FFF;
    select_ln777_1_fu_958_p3 <= 
        icmp_ln879_1_reg_1370 when (and_ln416_1_fu_952_p2(0) = '1') else 
        icmp_ln768_1_reg_1375;
    select_ln777_2_fu_1010_p3 <= 
        icmp_ln879_2_reg_1386 when (and_ln416_2_fu_1004_p2(0) = '1') else 
        icmp_ln768_2_reg_1391;
    select_ln777_3_fu_1062_p3 <= 
        icmp_ln879_3_reg_1402 when (and_ln416_3_fu_1056_p2(0) = '1') else 
        icmp_ln768_3_reg_1407;
    select_ln777_4_fu_1114_p3 <= 
        icmp_ln879_4_reg_1418 when (and_ln416_4_fu_1108_p2(0) = '1') else 
        icmp_ln768_4_reg_1423;
    select_ln777_5_fu_1166_p3 <= 
        icmp_ln879_5_reg_1434 when (and_ln416_5_fu_1160_p2(0) = '1') else 
        icmp_ln768_5_reg_1439;
    select_ln777_6_fu_1218_p3 <= 
        icmp_ln879_6_reg_1450 when (and_ln416_6_fu_1212_p2(0) = '1') else 
        icmp_ln768_6_reg_1455;
    select_ln777_7_fu_1270_p3 <= 
        icmp_ln879_7_reg_1466 when (and_ln416_7_fu_1264_p2(0) = '1') else 
        icmp_ln768_7_reg_1471;
    select_ln777_fu_906_p3 <= 
        icmp_ln879_reg_1354 when (and_ln416_fu_900_p2(0) = '1') else 
        icmp_ln768_reg_1359;
    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;

    tmp_10_fu_585_p3 <= data_V_data_3_V_dout(1 downto 1);
    tmp_11_fu_1036_p3 <= tmp_data_V_3_reg_1318(12 downto 12);
    tmp_12_fu_1043_p3 <= add_ln415_3_reg_1396(11 downto 11);
    tmp_13_fu_645_p3 <= data_V_data_4_V_dout(1 downto 1);
    tmp_14_fu_1088_p3 <= tmp_data_V_418_reg_1324(12 downto 12);
    tmp_15_fu_1095_p3 <= add_ln415_4_reg_1412(11 downto 11);
    tmp_16_fu_705_p3 <= data_V_data_5_V_dout(1 downto 1);
    tmp_17_fu_1140_p3 <= tmp_data_V_5_reg_1330(12 downto 12);
    tmp_18_fu_1147_p3 <= add_ln415_5_reg_1428(11 downto 11);
    tmp_19_fu_765_p3 <= data_V_data_6_V_dout(1 downto 1);
    tmp_1_fu_405_p3 <= data_V_data_0_V_dout(1 downto 1);
    tmp_20_fu_1192_p3 <= tmp_data_V_6_reg_1336(12 downto 12);
    tmp_21_fu_1199_p3 <= add_ln415_6_reg_1444(11 downto 11);
    tmp_22_fu_825_p3 <= data_V_data_7_V_dout(1 downto 1);
    tmp_23_fu_1244_p3 <= tmp_data_V_7_reg_1342(12 downto 12);
    tmp_24_fu_1251_p3 <= add_ln415_7_reg_1460(11 downto 11);
    tmp_2_fu_880_p3 <= tmp_data_V_0_reg_1300(12 downto 12);
    tmp_3_fu_887_p3 <= add_ln415_reg_1348(11 downto 11);
    tmp_4_fu_465_p3 <= data_V_data_1_V_dout(1 downto 1);
    tmp_5_fu_932_p3 <= tmp_data_V_1_reg_1306(12 downto 12);
    tmp_6_fu_939_p3 <= add_ln415_1_reg_1364(11 downto 11);
    tmp_7_fu_525_p3 <= data_V_data_2_V_dout(1 downto 1);
    tmp_8_fu_984_p3 <= tmp_data_V_2_reg_1312(12 downto 12);
    tmp_9_fu_991_p3 <= add_ln415_2_reg_1380(11 downto 11);
    tmp_data_0_V_fu_919_p3 <= 
        select_ln340_fu_912_p3 when (icmp_ln1494_fu_875_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_1_V_fu_971_p3 <= 
        select_ln340_1_fu_964_p3 when (icmp_ln1494_1_fu_927_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_2_V_fu_1023_p3 <= 
        select_ln340_2_fu_1016_p3 when (icmp_ln1494_2_fu_979_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_3_V_fu_1075_p3 <= 
        select_ln340_3_fu_1068_p3 when (icmp_ln1494_3_fu_1031_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_4_V_fu_1127_p3 <= 
        select_ln340_4_fu_1120_p3 when (icmp_ln1494_4_fu_1083_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_5_V_fu_1179_p3 <= 
        select_ln340_5_fu_1172_p3 when (icmp_ln1494_5_fu_1135_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_6_V_fu_1231_p3 <= 
        select_ln340_6_fu_1224_p3 when (icmp_ln1494_6_fu_1187_p2(0) = '1') else 
        ap_const_lv12_0;
    tmp_data_7_V_fu_1283_p3 <= 
        select_ln340_7_fu_1276_p3 when (icmp_ln1494_7_fu_1239_p2(0) = '1') else 
        ap_const_lv12_0;
    trunc_ln412_1_fu_473_p1 <= data_V_data_1_V_dout(1 - 1 downto 0);
    trunc_ln412_2_fu_533_p1 <= data_V_data_2_V_dout(1 - 1 downto 0);
    trunc_ln412_3_fu_593_p1 <= data_V_data_3_V_dout(1 - 1 downto 0);
    trunc_ln412_4_fu_653_p1 <= data_V_data_4_V_dout(1 - 1 downto 0);
    trunc_ln412_5_fu_713_p1 <= data_V_data_5_V_dout(1 - 1 downto 0);
    trunc_ln412_6_fu_773_p1 <= data_V_data_6_V_dout(1 - 1 downto 0);
    trunc_ln412_7_fu_833_p1 <= data_V_data_7_V_dout(1 - 1 downto 0);
    trunc_ln412_fu_413_p1 <= data_V_data_0_V_dout(1 - 1 downto 0);
    trunc_ln708_1_fu_455_p4 <= data_V_data_1_V_dout(12 downto 1);
    trunc_ln708_2_fu_515_p4 <= data_V_data_2_V_dout(12 downto 1);
    trunc_ln708_3_fu_575_p4 <= data_V_data_3_V_dout(12 downto 1);
    trunc_ln708_4_fu_635_p4 <= data_V_data_4_V_dout(12 downto 1);
    trunc_ln708_5_fu_695_p4 <= data_V_data_5_V_dout(12 downto 1);
    trunc_ln708_6_fu_755_p4 <= data_V_data_6_V_dout(12 downto 1);
    trunc_ln708_7_fu_815_p4 <= data_V_data_7_V_dout(12 downto 1);
    trunc_ln_fu_395_p4 <= data_V_data_0_V_dout(12 downto 1);
    xor_ln416_1_fu_946_p2 <= (tmp_6_fu_939_p3 xor ap_const_lv1_1);
    xor_ln416_2_fu_998_p2 <= (tmp_9_fu_991_p3 xor ap_const_lv1_1);
    xor_ln416_3_fu_1050_p2 <= (tmp_12_fu_1043_p3 xor ap_const_lv1_1);
    xor_ln416_4_fu_1102_p2 <= (tmp_15_fu_1095_p3 xor ap_const_lv1_1);
    xor_ln416_5_fu_1154_p2 <= (tmp_18_fu_1147_p3 xor ap_const_lv1_1);
    xor_ln416_6_fu_1206_p2 <= (tmp_21_fu_1199_p3 xor ap_const_lv1_1);
    xor_ln416_7_fu_1258_p2 <= (tmp_24_fu_1251_p3 xor ap_const_lv1_1);
    xor_ln416_fu_894_p2 <= (tmp_3_fu_887_p3 xor ap_const_lv1_1);
    zext_ln415_1_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_1_fu_477_p2),12));
    zext_ln415_2_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_2_fu_537_p2),12));
    zext_ln415_3_fu_603_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_3_fu_597_p2),12));
    zext_ln415_4_fu_663_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_4_fu_657_p2),12));
    zext_ln415_5_fu_723_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_5_fu_717_p2),12));
    zext_ln415_6_fu_783_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_6_fu_777_p2),12));
    zext_ln415_7_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_7_fu_837_p2),12));
    zext_ln415_fu_423_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(and_ln415_fu_417_p2),12));
end behav;
